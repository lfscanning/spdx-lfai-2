{
    "SPDXID": "SPDXRef-DOCUMENT",
    "creationInfo": {
        "created": "2025-01-29T17:58:43Z",
        "creators": [
            "Organization: aquasecurity",
            "Tool: trivy-dev",
            "Organization: Linux Foundation",
            "Tool: Scaffold",
            "Tool: Parlay"
        ]
    },
    "dataLicense": "CC0-1.0",
    "hasExtractedLicensingInfos": [
        {
            "comment": "This license text represents a string found in licensing metadata - the actual text is not known",
            "extractedText": "BSD (version unspecified)",
            "licenseId": "LicenseRef-BSD-version-unspecified-"
        },
        {
            "comment": "This license text represents a string found in licensing metadata - the actual text is not known",
            "extractedText": "Public domain statement",
            "licenseId": "LicenseRef-Public-domain-statement"
        },
        {
            "comment": "This license text represents a string found in licensing metadata - the actual text is not known",
            "extractedText": "Other",
            "licenseId": "LicenseRef-Other"
        },
        {
            "comment": "This license text represents a string found in licensing metadata - the actual text is not known",
            "extractedText": "GPL-2.0+",
            "licenseId": "LicenseRef-GPL-2.0-"
        }
    ],
    "name": "/tmp/tmpdwelsmwo/code",
    "spdxVersion": "SPDX-2.3",
    "documentNamespace": "http://aquasecurity.github.io/trivy/filesystem//tmp/tmpdwelsmwo/code-4ac554d9-bfb4-4195-bde8-4f604d6609c9",
    "packages": [
        {
            "SPDXID": "SPDXRef-Application-20ff6256dbd86279",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: pip"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "atorch/atorch/requirements.txt",
            "primaryPackagePurpose": "APPLICATION",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "aeba1f1cbb363268028f309d3c18dec07570d73d"
        },
        {
            "SPDXID": "SPDXRef-Application-9846dcbe6863e946",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: pip"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "atorch/examples/llama2/requirements.txt",
            "primaryPackagePurpose": "APPLICATION",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "aeba1f1cbb363268028f309d3c18dec07570d73d"
        },
        {
            "SPDXID": "SPDXRef-Application-c5f4e20d353d551e",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: pip"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "atorch/examples/llama2_7b_ATorchTrainer/requirements.txt",
            "primaryPackagePurpose": "APPLICATION",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "aeba1f1cbb363268028f309d3c18dec07570d73d"
        },
        {
            "SPDXID": "SPDXRef-Application-ad6c4687af5a348f",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "dlrover/dlrover/go/brain/go.mod",
            "primaryPackagePurpose": "APPLICATION",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "3e010a67438d748cd0ec9fe8bd680897f88a4554"
        },
        {
            "SPDXID": "SPDXRef-Application-aa476259e4348c09",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "dlrover/dlrover/go/master/go.mod",
            "primaryPackagePurpose": "APPLICATION",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "3e010a67438d748cd0ec9fe8bd680897f88a4554"
        },
        {
            "SPDXID": "SPDXRef-Application-a63064239d6a40fc",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "dlrover/dlrover/go/operator/go.mod",
            "primaryPackagePurpose": "APPLICATION",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "3e010a67438d748cd0ec9fe8bd680897f88a4554"
        },
        {
            "SPDXID": "SPDXRef-Application-1514de6918b2350c",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: pip"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "dlrover/examples/pytorch/llama2/requirements.txt",
            "primaryPackagePurpose": "APPLICATION",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "3e010a67438d748cd0ec9fe8bd680897f88a4554"
        },
        {
            "SPDXID": "SPDXRef-Application-2c801939b14fc0d",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Class: lang-pkgs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "Type: pip"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "name": "torch_xla/docs/requirements.txt",
            "primaryPackagePurpose": "APPLICATION",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "08306b7442638b09da719bc4db81a9e1dcb4bffd"
        },
        {
            "SPDXID": "SPDXRef-Package-4c90103c454b24c8",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Accelerate",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/accelerate@0.24.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/huggingface/accelerate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "accelerate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/examples/pytorch/llama2/requirements.txt",
            "supplier": "Organization: Hugging Face",
            "versionInfo": "0.24.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4cc9fb2c959893ec",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Accelerate",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/accelerate@0.21.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/huggingface/accelerate",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "accelerate",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: atorch/examples/llama2_7b_ATorchTrainer/requirements.txt",
            "supplier": "Organization: Hugging Face",
            "versionInfo": "0.21.0"
        },
        {
            "SPDXID": "SPDXRef-Package-50af95c189644797",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\".",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/appdirs@1.4.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "http://github.com/ActiveState/appdirs",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "appdirs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/examples/pytorch/llama2/requirements.txt",
            "supplier": "Organization: ActiveState Software",
            "versionInfo": "1.4.4"
        },
        {
            "SPDXID": "SPDXRef-Package-e6858187a2164d0c",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "k-bit optimizers and matrix multiplication routines.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/bitsandbytes@0.37.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "LicenseRef-Other",
            "licenseDeclared": "LicenseRef-Other",
            "name": "bitsandbytes",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/examples/pytorch/llama2/requirements.txt",
            "supplier": "Organization: bitsandbytes foundation",
            "versionInfo": "0.37.2"
        },
        {
            "SPDXID": "SPDXRef-Package-7658c641d0943d39",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: cloud.google.com/go@v0.81.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cloud is the root of the packages used to access Google Cloud\nServices. See https://pkg.go.dev/cloud.google.com/go#section-directories for a\nfull list of sub-modules.\n\nAll clients in sub-packages are configurable via client options. These options\nare described here: https://pkg.go.dev/google.golang.org/api/option.\n\nEndpoint configuration is used to specify the URL to which requests are\nsent. It is used for services that support or require regional endpoints, as\nwell as for other use cases such as testing against fake servers.\n\nFor example, the Vertex AI service recommends that you configure the endpoint to\nthe location with the features you want that is closest to your physical\nlocation or the location of your users. There is no global endpoint for Vertex\nAI. See Vertex AI - Locations for more details. The following example\ndemonstrates configuring a Vertex AI client with a regional endpoint:\n\nAll of the clients support authentication via Google Application Default Credentials,\nor by providing a JSON key file for a Service Account. See examples below.\n\nGoogle Application Default Credentials (ADC) is the recommended way to authorize\nand authenticate clients. For information on how to create and obtain\nApplication Default Credentials, see\nhttps://cloud.google.com/docs/authentication/production. If you have your\nenvironment configured correctly you will not need to pass any extra information\nto the client libraries. Here is an example of a client using ADC to\nauthenticate:\n\nYou can use a file with credentials to authenticate and authorize, such as a\nJSON key file associated with a Google service account. Service Account keys can\nbe created and downloaded from https://console.cloud.google.com/iam-admin/serviceaccounts.\nThis example uses the Secret Manger client, but the same steps apply to the\nall other client libraries this package as well. Example:\n\nIn some cases (for instance, you don't want to store secrets on disk), you can\ncreate credentials from in-memory JSON and use the WithCredentials option.\nThis example uses the Secret Manager client, but the same steps apply to\nall other client libraries as well. Note that scopes can be\nfound at https://developers.google.com/identity/protocols/oauth2/scopes, and\nare also provided in all auto-generated libraries: for example,\ncloud.google.com/go/secretmanager/apiv1 provides DefaultAuthScopes. Example:\n\nBy default, non-streaming methods, like Create or Get, will have a default\ndeadline applied to the context provided at call time, unless a context deadline\nis already set. Streaming methods have no default deadline and will run\nindefinitely. To set timeouts or arrange for cancellation, use\ncontext. Transient errors will be retried when correctness allows.\n\nHere is an example of setting a timeout for an RPC using\ncontext.WithTimeout:\n\nHere is an example of setting a timeout for an RPC using\ngithub.com/googleapis/gax-go/v2.WithTimeout:\n\nHere is an example of how to arrange for an RPC to be canceled, use\ncontext.WithCancel:\n\nDo not attempt to control the initial connection (dialing) of a service by\nsetting a timeout on the context passed to NewClient. Dialing is non-blocking,\nso timeouts would be ineffective and would only interfere with credential\nrefreshing, which uses the same context.\n\nRegardless of which transport is used, request headers can be set in the same\nway using [`callctx.SetHeaders`]setheaders.\n\nHere is a generic example:\n\nThere are a some header keys that Google reserves for internal use that must\nnot be ovewritten. The following header keys are broadly considered reserved\nand should not be conveyed by client library users unless instructed to do so:\n\n* `x-goog-api-client`\n* `x-goog-request-params`\n\nBe sure to check the individual package documentation for other service-specific\nreserved headers. For example, Storage supports a specific auditing header that\nis mentioned in that [module's documentation]storagedocs.\n\nGoogle Cloud services respect system parameterssystem parameters that can be\nused to augment request and/or response behavior. For the most part, they are\nnot needed when using one of the enclosed client libraries. However, those that\nmay be necessary are made available via the [`callctx`]callctx package. If not\npresent there, consider opening an issue on that repo to request a new constant.\n\nConnection pooling differs in clients based on their transport. Cloud\nclients either rely on HTTP or gRPC transports to communicate\nwith Google Cloud.\n\nCloud clients that use HTTP rely on the underlying HTTP transport to cache\nconnections for later re-use. These are cached to the http.MaxIdleConns\nand http.MaxIdleConnsPerHost settings in http.DefaultTransport by default.\n\nFor gRPC clients, connection pooling is configurable. Users of Cloud Client\nLibraries may specify google.golang.org/api/option.WithGRPCConnectionPool\nas a client option to NewClient calls. This configures the underlying gRPC\nconnections to be pooled and accessed in a round robin fashion.\n\nMinimal container images like Alpine lack CA certificates. This causes RPCs to\nappear to hang, because gRPC retries indefinitely. See\nhttps://github.com/googleapis/google-cloud-go/issues/928 for more information.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Debugging Guide.\n\nFor tips on how to write tests against code that calls into our libraries check\nout our Testing Guide.\n\nMost of the errors returned by the generated clients are wrapped in an\ngithub.com/googleapis/gax-go/v2/apierror.APIError and can be further unwrapped\ninto a google.golang.org/grpc/status.Status or\ngoogle.golang.org/api/googleapi.Error depending on the transport used to make\nthe call (gRPC or REST). Converting your errors to these types can be a useful\nway to get more information about what went wrong while debugging.\n\nAPIError gives access to specific details in the error. The transport-specific\nerrors can still be unwrapped using the APIError.\n\nSemver is used to communicate stability of the sub-modules of this package.\nNote, some stable sub-modules do contain packages, and sometimes features, that\nare considered unstable. If something is unstable it will be explicitly labeled\nas such. Example of package does in an unstable package:\n\nClients that contain alpha and beta in their import path may change or go away\nwithout notice.\n\nClients marked stable will maintain compatibility with future versions for as\nlong as we can reasonably sustain. Incompatible changes might be made in some\nsituations, including:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/cloud.google.com/go@0.81.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/google-cloud-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "cloud.google.com/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.81.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bc059817d8b2b6d1",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "HuggingFace community-driven open-source library of datasets",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/datasets@2.18.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/huggingface/datasets",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "datasets",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/examples/pytorch/llama2/requirements.txt",
            "supplier": "Organization: Hugging Face",
            "versionInfo": "2.18.0"
        },
        {
            "SPDXID": "SPDXRef-Package-19d56d10f89fd26a",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Docutils -- Python Documentation Utilities",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/docutils@0.16",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://docutils.sourceforge.io",
            "licenseConcluded": "BSD-3-Clause OR LicenseRef-GPL-2.0- OR PSF-2.0 OR Unlicense",
            "licenseDeclared": "BSD-3-Clause OR LicenseRef-GPL-2.0- OR PSF-2.0 OR Unlicense",
            "name": "docutils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: torch_xla/docs/requirements.txt",
            "supplier": "NOASSERTION",
            "versionInfo": "0.16"
        },
        {
            "SPDXID": "SPDXRef-Package-6ff74fd208784e61",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "FairScale: A PyTorch library for large-scale and high-performance training.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/fairscale@0.4.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "fairscale",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: atorch/atorch/requirements.txt",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c465fac0c7908042",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "A library for automatically generating command line interfaces.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/fire@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/python-fire",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "fire",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/examples/pytorch/llama2/requirements.txt",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8e740fcd03c13c90",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Azure/go-autorest@v14.2.0+incompatible"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package go-autorest provides an HTTP request client for use with Autorest-generated API client packages.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/azure/go-autorest@14.2.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/azure/go-autorest",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/Azure/go-autorest",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "14.2.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-15017be31cb581f9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Azure/go-autorest/autorest@v0.11.18"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package autorest implements an HTTP request pipeline suitable for use across multiple go-routines\nand provides the shared routines relied on by AutoRest (see https://github.com/Azure/autorest/)\ngenerated Go code.\n\nThe package breaks sending and responding to HTTP requests into three phases: Preparing, Sending,\nand Responding. A typical pattern is:\n\nEach phase relies on decorators to modify and / or manage processing. Decorators may first modify\nand then pass the data along, pass the data first and then modify the result, or wrap themselves\naround passing the data (such as a logger might do). Decorators run in the order provided. For\nexample, the following:\n\nwill set the URL to:\n\nPreparers and Responders may be shared and re-used (assuming the underlying decorators support\nsharing and re-use). Performant use is obtained by creating one or more Preparers and Responders\nshared among multiple go-routines, and a single Sender shared among multiple sending go-routines,\nall bound together by means of input / output channels.\n\nDecorators hold their passed state within a closure (such as the path components in the example\nabove). Be careful to share Preparers and Responders only in a context where such held state\napplies. For example, it may not make sense to share a Preparer that applies a query string from a\nfixed set of values. Similarly, sharing a Responder that reads the response body into a passed\nstruct (e.g., ByUnmarshallingJson) is likely incorrect.\n\nLastly, the Swagger specification (https://swagger.io) that drives AutoRest\n(https://github.com/Azure/autorest/) precisely defines two date forms: date and date-time. The\ngithub.com/Azure/go-autorest/autorest/date package provides time.Time derivations to ensure\ncorrect parsing and formatting.\n\nErrors raised by autorest objects and methods will conform to the autorest.Error interface.\n\nSee the included examples for more detail. For details on the suggested use of this package by\ngenerated clients, see the Client described below.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/azure/go-autorest/autorest@0.11.18",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/azure/go-autorest",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/Azure/go-autorest/autorest",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.11.18"
        },
        {
            "SPDXID": "SPDXRef-Package-a6cee429494a6a5b",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Azure/go-autorest/autorest/adal@v0.9.13"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/azure/go-autorest/autorest/adal@0.9.13",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/azure/go-autorest",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/Azure/go-autorest/autorest/adal",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.9.13"
        },
        {
            "SPDXID": "SPDXRef-Package-910fa41b23e7240f",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Azure/go-autorest/autorest/date@v0.3.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package date provides time.Time derivatives that conform to the Swagger.io (https://swagger.io/)\ndefined date   formats: Date and DateTime. Both types may, in most cases, be used in lieu of\ntime.Time types. And both convert to time.Time through a ToTime method.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/azure/go-autorest/autorest/date@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/azure/go-autorest",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/Azure/go-autorest/autorest/date",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-428da1a9e3ee02b9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Azure/go-autorest/logger@v0.2.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/azure/go-autorest/logger@0.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/azure/go-autorest",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/Azure/go-autorest/logger",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-c09990ec1cdbf18",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/Azure/go-autorest/tracing@v0.6.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/azure/go-autorest/tracing@0.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/azure/go-autorest",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/Azure/go-autorest/tracing",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-804bb1b6ca9816fa",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/DATA-DOG/go-sqlmock@v1.5.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package sqlmock is a mock library implementing sql driver. Which has one and only\npurpose - to simulate any sql driver behavior in tests, without needing a real\ndatabase connection. It helps to maintain correct **TDD** workflow.\n\nIt does not require any modifications to your source code in order to test\nand mock database operations. Supports concurrency and multiple database mocking.\n\nThe driver allows to mock any sql driver method behavior.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/data-dog/go-sqlmock@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/data-dog/go-sqlmock",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/DATA-DOG/go-sqlmock",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: DATA-DOG",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-713f473ecac1dab9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/purell@v1.1.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package purell offers URL normalization as described on the wikipedia page:\nhttp://en.wikipedia.org/wiki/URL_normalization",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/purell@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/purell",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/purell",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-33e8df43cb4636f7",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/PuerkitoBio/urlesc@v0.0.0-20170810143723-de5bf2ad4578"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package urlesc implements query escaping as per RFC 3986.\nIt contains some parts of the net/url package, modified so as to allow\nsome reserved characters incorrectly escaped by net/url.\nSee https://github.com/golang/go/issues/5684",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/puerkitobio/urlesc@0.0.0-20170810143723-de5bf2ad4578",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/puerkitobio/urlesc",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/PuerkitoBio/urlesc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20170810143723-de5bf2ad4578"
        },
        {
            "SPDXID": "SPDXRef-Package-8a1425a82e37ff29",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-9d3d347523f755bb",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/beorn7/perks@v1.0.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/beorn7/perks@1.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/beorn7/perks",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/beorn7/perks",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Bj\u00f6rn Rabenstein",
            "versionInfo": "1.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-52465f37a3f5fd36",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/bytedance/sonic@v1.11.6"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/bytedance/sonic@1.11.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/bytedance/sonic",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/bytedance/sonic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Bytedance Inc.",
            "versionInfo": "1.11.6"
        },
        {
            "SPDXID": "SPDXRef-Package-d3d73170ef8136c0",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/bytedance/sonic/loader@v0.1.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/bytedance/sonic/loader@0.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/bytedance/sonic",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/bytedance/sonic/loader",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-28342b3a309be2bc",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.1.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-377ffc8c060ea4b2",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cespare/xxhash/v2@v2.1.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xxhash implements the 64-bit variant of xxHash (XXH64) as described\nat http://cyan4973.github.io/xxHash/.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cespare/xxhash/v2@2.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cespare/xxhash",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/cespare/xxhash/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Caleb Spare",
            "versionInfo": "2.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-b666ed253b61e748",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cloudwego/base64x@v0.1.4"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cloudwego/base64x@0.1.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cloudwego/base64x",
            "licenseConcluded": "Apache-2.0 OR Apache-2.0",
            "licenseDeclared": "Apache-2.0 OR Apache-2.0",
            "name": "github.com/cloudwego/base64x",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: CloudWeGo",
            "versionInfo": "0.1.4"
        },
        {
            "SPDXID": "SPDXRef-Package-780429677a2022b4",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/cloudwego/iasm@v0.2.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/cloudwego/iasm@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/cloudwego/iasm",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/cloudwego/iasm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: CloudWeGo",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4882abe722ee437a",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-cd4b65d77bd9560f",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/davecgh/go-spew@v1.1.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/davecgh/go-spew@1.1.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/davecgh/go-spew",
            "licenseConcluded": "ISC",
            "licenseDeclared": "ISC",
            "name": "github.com/davecgh/go-spew",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Dave Collins",
            "versionInfo": "1.1.1"
        },
        {
            "SPDXID": "SPDXRef-Package-ffb6d65a57289596",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/elliotchance/orderedmap@v1.5.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/elliotchance/orderedmap@1.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/elliotchance/orderedmap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/elliotchance/orderedmap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Elliot Chance",
            "versionInfo": "1.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4d126f66e96508cb",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/emicklei/go-restful@v2.9.5+incompatible"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package restful , a lean package for creating REST-style WebServices without magic.\n\nA WebService has a collection of Route objects that dispatch incoming Http Requests to a function calls.\nTypically, a WebService has a root path (e.g. /users) and defines common MIME types for its routes.\nWebServices must be added to a container (see below) in order to handler Http requests from a server.\n\nA Route is defined by a HTTP method, an URL path and (optionally) the MIME types it consumes (Content-Type) and produces (Accept).\nThis package has the logic to find the best matching Route and if found, call its Function.\n\nThe (*Request, *Response) arguments provide functions for reading information from the request and writing information back to the response.\n\nSee the example https://github.com/emicklei/go-restful/blob/master/examples/restful-user-resource.go with a full implementation.\n\nA Route parameter can be specified using the format \"uri/{var[:regexp]}\" or the special version \"uri/{var:*}\" for matching the tail of the path.\nFor example, /persons/{name:[A-Z][A-Z]} can be used to restrict values for the parameter \"name\" to only contain capital alphabetic characters.\nRegular expressions must use the standard Go syntax as described in the regexp package. (https://code.google.com/p/re2/wiki/Syntax)\nThis feature requires the use of a CurlyRouter.\n\nA Container holds a collection of WebServices, Filters and a http.ServeMux for multiplexing http requests.\nUsing the statements \"restful.Add(...) and restful.Filter(...)\" will register WebServices and Filters to the Default Container.\nThe Default container of go-restful uses the http.DefaultServeMux.\nYou can create your own Container and create a new http.Server for that particular container.\n\nA filter dynamically intercepts requests and responses to transform or use the information contained in the requests or responses.\nYou can use filters to perform generic logging, measurement, authentication, redirect, set response headers etc.\nIn the restful package there are three hooks into the request,response flow where filters can be added.\nEach filter must define a FilterFunction:\n\nUse the following statement to pass the request,response pair to the next filter or RouteFunction\n\nThese are processed before any registered WebService.\n\nThese are processed before any Route of a WebService.\n\nThese are processed before calling the function associated with the Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/master/examples/restful-filters.go with full implementations.\n\nTwo encodings are supported: gzip and deflate. To enable this for all responses:\n\nIf a Http request includes the Accept-Encoding header then the response content will be compressed using the specified encoding.\nAlternatively, you can create a Filter that performs the encoding and install it per WebService or Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/master/examples/restful-encoding-filter.go\n\nBy installing a pre-defined container filter, your Webservice(s) can respond to the OPTIONS Http request.\n\nBy installing the filter of a CrossOriginResourceSharing (CORS), your WebService(s) can handle CORS requests.\n\nUnexpected things happen. If a request cannot be processed because of a failure, your service needs to tell via the response what happened and why.\nFor this reason HTTP status codes exist and it is important to use the correct code in every exceptional situation.\n\nIf path or query parameters are not valid (content or type) then use http.StatusBadRequest.\n\nDespite a valid URI, the resource requested may not be available\n\nIf the application logic could not process the request (or write the response) then use http.StatusInternalServerError.\n\nThe request has a valid URL but the method (GET,PUT,POST,...) is not allowed.\n\nThe request does not have or has an unknown Accept Header set for this operation.\n\nThe request does not have or has an unknown Content-Type Header set for this operation.\n\nIn addition to setting the correct (error) Http status code, you can choose to write a ServiceError message on the response.\n\nThis package has several options that affect the performance of your service. It is important to understand them and how you can change it.\n\nDoNotRecover controls whether panics will be caught to return HTTP 500.\nIf set to false, the container will recover from panics.\nDefault value is true\n\nIf content encoding is enabled then the default strategy for getting new gzip/zlib writers and readers is to use a sync.Pool.\nBecause writers are expensive structures, performance is even more improved when using a preloaded cache. You can also inject your own implementation.\n\nThis package has the means to produce detail logging of the complete Http request matching process and filter invocation.\nEnabling this feature requires you to set an implementation of restful.StdLogger (e.g. log.Logger) instance such as:\n\nThe restful.SetLogger() method allows you to override the logger used by the package. By default restful\nuses the standard library `log` package and logs to stdout. Different logging packages are supported as\nlong as they conform to `StdLogger` interface defined in the `log` sub-package, writing an adapter for your\npreferred package is simple.\n\n(c) 2012-2015, http://ernestmicklei.com. MIT License",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/emicklei/go-restful@2.9.5%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/emicklei/go-restful",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/emicklei/go-restful",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Ernest Micklei",
            "versionInfo": "2.9.5+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-4221284904d689cf",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/emicklei/go-restful/v3@v3.9.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package restful , a lean package for creating REST-style WebServices without magic.\n\nA WebService has a collection of Route objects that dispatch incoming Http Requests to a function calls.\nTypically, a WebService has a root path (e.g. /users) and defines common MIME types for its routes.\nWebServices must be added to a container (see below) in order to handler Http requests from a server.\n\nA Route is defined by a HTTP method, an URL path and (optionally) the MIME types it consumes (Content-Type) and produces (Accept).\nThis package has the logic to find the best matching Route and if found, call its Function.\n\nThe (*Request, *Response) arguments provide functions for reading information from the request and writing information back to the response.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/user-resource/restful-user-resource.go with a full implementation.\n\nA Route parameter can be specified using the format \"uri/{var[:regexp]}\" or the special version \"uri/{var:*}\" for matching the tail of the path.\nFor example, /persons/{name:[A-Z][A-Z]} can be used to restrict values for the parameter \"name\" to only contain capital alphabetic characters.\nRegular expressions must use the standard Go syntax as described in the regexp package. (https://code.google.com/p/re2/wiki/Syntax)\nThis feature requires the use of a CurlyRouter.\n\nA Container holds a collection of WebServices, Filters and a http.ServeMux for multiplexing http requests.\nUsing the statements \"restful.Add(...) and restful.Filter(...)\" will register WebServices and Filters to the Default Container.\nThe Default container of go-restful uses the http.DefaultServeMux.\nYou can create your own Container and create a new http.Server for that particular container.\n\nA filter dynamically intercepts requests and responses to transform or use the information contained in the requests or responses.\nYou can use filters to perform generic logging, measurement, authentication, redirect, set response headers etc.\nIn the restful package there are three hooks into the request,response flow where filters can be added.\nEach filter must define a FilterFunction:\n\nUse the following statement to pass the request,response pair to the next filter or RouteFunction\n\nThese are processed before any registered WebService.\n\nThese are processed before any Route of a WebService.\n\nThese are processed before calling the function associated with the Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/filters/restful-filters.go with full implementations.\n\nTwo encodings are supported: gzip and deflate. To enable this for all responses:\n\nIf a Http request includes the Accept-Encoding header then the response content will be compressed using the specified encoding.\nAlternatively, you can create a Filter that performs the encoding and install it per WebService or Route.\n\nSee the example https://github.com/emicklei/go-restful/blob/v3/examples/encoding/restful-encoding-filter.go\n\nBy installing a pre-defined container filter, your Webservice(s) can respond to the OPTIONS Http request.\n\nBy installing the filter of a CrossOriginResourceSharing (CORS), your WebService(s) can handle CORS requests.\n\nUnexpected things happen. If a request cannot be processed because of a failure, your service needs to tell via the response what happened and why.\nFor this reason HTTP status codes exist and it is important to use the correct code in every exceptional situation.\n\nIf path or query parameters are not valid (content or type) then use http.StatusBadRequest.\n\nDespite a valid URI, the resource requested may not be available\n\nIf the application logic could not process the request (or write the response) then use http.StatusInternalServerError.\n\nThe request has a valid URL but the method (GET,PUT,POST,...) is not allowed.\n\nThe request does not have or has an unknown Accept Header set for this operation.\n\nThe request does not have or has an unknown Content-Type Header set for this operation.\n\nIn addition to setting the correct (error) Http status code, you can choose to write a ServiceError message on the response.\n\nThis package has several options that affect the performance of your service. It is important to understand them and how you can change it.\n\nDoNotRecover controls whether panics will be caught to return HTTP 500.\nIf set to false, the container will recover from panics.\nDefault value is true\n\nIf content encoding is enabled then the default strategy for getting new gzip/zlib writers and readers is to use a sync.Pool.\nBecause writers are expensive structures, performance is even more improved when using a preloaded cache. You can also inject your own implementation.\n\nThis package has the means to produce detail logging of the complete Http request matching process and filter invocation.\nEnabling this feature requires you to set an implementation of restful.StdLogger (e.g. log.Logger) instance such as:\n\nThe restful.SetLogger() method allows you to override the logger used by the package. By default restful\nuses the standard library `log` package and logs to stdout. Different logging packages are supported as\nlong as they conform to `StdLogger` interface defined in the `log` sub-package, writing an adapter for your\npreferred package is simple.\n\n(c) 2012-2015, http://ernestmicklei.com. MIT License",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/emicklei/go-restful/v3@3.9.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/emicklei/go-restful",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/emicklei/go-restful/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Ernest Micklei",
            "versionInfo": "3.9.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1a30c368c42814de",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/evanphx/json-patch@v4.12.0+incompatible"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/evanphx/json-patch@4.12.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/evanphx/json-patch",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/evanphx/json-patch",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Evan Phoenix",
            "versionInfo": "4.12.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-c9a74345bff12389",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/evanphx/json-patch@v4.12.0+incompatible"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/evanphx/json-patch@4.12.0%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/evanphx/json-patch",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/evanphx/json-patch",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Evan Phoenix",
            "versionInfo": "4.12.0+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-2e67278266d3771",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/evanphx/json-patch/v5@v5.6.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/evanphx/json-patch/v5@5.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/evanphx/json-patch",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/evanphx/json-patch/v5",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Evan Phoenix",
            "versionInfo": "5.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c30d17a3f31c25eb",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/form3tech-oss/jwt-go@v3.2.3+incompatible"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jwt is a Go implementation of JSON Web Tokens: http://self-issued.info/docs/draft-jones-json-web-token.html\n\nSee README.md for more info.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/form3tech-oss/jwt-go@3.2.3%2Bincompatible",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/form3tech-oss/jwt-go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/form3tech-oss/jwt-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "3.2.3+incompatible"
        },
        {
            "SPDXID": "SPDXRef-Package-277a9bcea21ea910",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.5.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.5.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.5.1"
        },
        {
            "SPDXID": "SPDXRef-Package-e3ee9833b6dc8859",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/fsnotify/fsnotify@v1.6.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fsnotify provides a cross-platform interface for file system\nnotifications.\n\nCurrently supported systems:\n\nSet the FSNOTIFY_DEBUG environment variable to \"1\" to print debug messages to\nstderr. This can be useful to track down some problems, especially in cases\nwhere fsnotify is used as an indirect dependency.\n\nEvery event will be printed as soon as there's something useful to print,\nwith as little processing from fsnotify.\n\nExample output:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/fsnotify/fsnotify@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/fsnotify/fsnotify",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/fsnotify/fsnotify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: fsnotify",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9784576cb6960c33",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gabriel-vasile/mimetype@v1.4.3"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mimetype uses magic number signatures to detect the MIME type of a file.\n\nFile formats are stored in a hierarchy with application/octet-stream at its root.\nFor example, the hierarchy for HTML format is application/octet-stream ->\ntext/plain -> text/html.\n\n\nPure io.Readers (meaning those without a Seek method) cannot be read twice.\nThis means that once DetectReader has been called on an io.Reader, that reader\nis missing the bytes representing the header of the file.\nTo detect the MIME type and then reuse the input, use a buffer, io.TeeReader,\nand io.MultiReader to create a new reader containing the original, unaltered data.\n\nIf the input is an io.ReadSeeker instead, call input.Seek(0, io.SeekStart)\nbefore reusing it.\n\n\nUse Extend to add support for a file format which is not detected by mimetype.\n\nhttps://www.garykessler.net/library/file_sigs.html and\nhttps://github.com/file/file/tree/master/magic/Magdir\nhave signatures for a multitude of file formats.\n\n\nConsidering the definition of a binary file as \"a computer file that is not\na text file\", they can differentiated by searching for the text/plain MIME\nin their MIME hierarchy.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gabriel-vasile/mimetype@1.4.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gabriel-vasile/mimetype",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/gabriel-vasile/mimetype",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Gabriel Vasile",
            "versionInfo": "1.4.3"
        },
        {
            "SPDXID": "SPDXRef-Package-3fca946bddfe04c3",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gin-contrib/sse@v0.1.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gin-contrib/sse@0.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gin-contrib/sse",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/gin-contrib/sse",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-25b850f26be756a9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gin-gonic/gin@v1.10.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package gin implements a HTTP web framework called gin.\n\nSee https://gin-gonic.com/ for more information about gin.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gin-gonic/gin@1.10.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gin-gonic/gin",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/gin-gonic/gin",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Gin-Gonic",
            "versionInfo": "1.10.0"
        },
        {
            "SPDXID": "SPDXRef-Package-69a56867a428c2b9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v1.2.3"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@1.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "1.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-98cbc458bc77080e",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v1.2.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e83ee72cd2d75b26",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/logr@v1.4.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logr defines a general-purpose logging API and abstract interfaces\nto back that API.  Packages in the Go ecosystem can depend on this package,\nwhile callers can implement logging with whatever backend is appropriate.\n\nLogging is done using a Logger instance.  Logger is a concrete type with\nmethods, which defers the actual logging to a LogSink interface.  The main\nmethods of Logger are Info() and Error().  Arguments to Info() and Error()\nare key/value pairs rather than printf-style formatted strings, emphasizing\n\"structured logging\".\n\nWith Go's standard log package, we might write:\n\nWith logr's structured logging, we'd write:\n\nErrors are much the same.  Instead of:\n\nWe'd write:\n\nInfo() and Error() are very similar, but they are separate methods so that\nLogSink implementations can choose to do things like attach additional\ninformation (such as stack traces) on calls to Error(). Error() messages are\nalways logged, regardless of the current verbosity.  If there is no error\ninstance available, passing nil is valid.\n\nOften we want to log information only when the application in \"verbose\nmode\".  To write log lines that are more verbose, Logger has a V() method.\nThe higher the V-level of a log line, the less critical it is considered.\nLog-lines with V-levels that are not enabled (as per the LogSink) will not\nbe written.  Level V(0) is the default, and logger.V(0).Info() has the same\nmeaning as logger.Info().  Negative V-levels have the same meaning as V(0).\nError messages do not have a verbosity level and are always logged.\n\nWhere we might have written:\n\nWe can write:\n\nLogger instances can have name strings so that all messages logged through\nthat instance have additional context.  For example, you might want to add\na subsystem name:\n\nThe WithName() method returns a new Logger, which can be passed to\nconstructors or other functions for further use.  Repeated use of WithName()\nwill accumulate name \"segments\".  These name segments will be joined in some\nway by the LogSink implementation.  It is strongly recommended that name\nsegments contain simple identifiers (letters, digits, and hyphen), and do\nnot contain characters that could muddle the log output or confuse the\njoining operation (e.g. whitespace, commas, periods, slashes, brackets,\nquotes, etc).\n\nLogger instances can store any number of key/value pairs, which will be\nlogged alongside all messages logged through that instance.  For example,\nyou might want to create a Logger instance per managed object:\n\nWith the standard log package, we might write:\n\nWith logr we'd write:\n\nLogger has very few hard rules, with the goal that LogSink implementations\nmight have a lot of freedom to differentiate.  There are, however, some\nthings to consider.\n\nThe log message consists of a constant message attached to the log line.\nThis should generally be a simple description of what's occurring, and should\nnever be a format string.  Variable information can then be attached using\nnamed values.\n\nKeys are arbitrary strings, but should generally be constant values.  Values\nmay be any Go value, but how the value is formatted is determined by the\nLogSink implementation.\n\nLogger instances are meant to be passed around by value. Code that receives\nsuch a value can call its methods without having to check whether the\ninstance is ready for use.\n\nThe zero logger (= Logger{}) is identical to Discard() and discards all log\nentries. Code that receives a Logger by value can simply call it, the methods\nwill never crash. For cases where passing a logger is optional, a pointer to Logger\nshould be used.\n\nKeys are not strictly required to conform to any specification or regex, but\nit is recommended that they:\n\nThese guidelines help ensure that log data is processed properly regardless\nof the log implementation.  For example, log implementations will try to\noutput JSON data or will store data for later database (e.g. SQL) queries.\n\nWhile users are generally free to use key names of their choice, it's\ngenerally best to avoid using the following keys, as they're frequently used\nby implementations:\n\nImplementations are encouraged to make use of these keys to represent the\nabove concepts, when necessary (for example, in a pure-JSON output form, it\nwould be necessary to represent at least message and timestamp as ordinary\nnamed values).\n\nImplementations may choose to give callers access to the underlying\nlogging implementation.  The recommended pattern for this is:\n\nLogger grants access to the sink to enable type assertions like this:\n\nCustom `With*` functions can be implemented by copying the complete\nLogger struct and replacing the sink in the copy:\n\nDon't use New to construct a new Logger with a LogSink retrieved from an\nexisting Logger. Source code attribution might not work correctly and\nunexported fields in Logger get lost.\n\nBeware that the same LogSink instance may be shared by different logger\ninstances. Calling functions that modify the LogSink will affect all of\nthose.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/logr@1.4.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/logr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/logr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: go-logr",
            "versionInfo": "1.4.2"
        },
        {
            "SPDXID": "SPDXRef-Package-e57962629641a8f8",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-logr/zapr@v1.2.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zapr defines an implementation of the github.com/go-logr/logr\ninterfaces built on top of Zap (go.uber.org/zap).\n\nA new logr.Logger can be constructed from an existing zap.Logger using\nthe NewLogger function:\n\nFor the most part, concepts in Zap correspond directly with those in\nlogr.\n\nUnlike Zap, all fields *must* be in the form of sugared fields --\nit's illegal to pass a strongly-typed Zap field in a key position\nto any of the log methods.\n\nLevels in logr correspond to custom debug levels in Zap.  Any given level\nin logr is represents by its inverse in zap (`zapLevel = -1*logrLevel`).\nFor example V(2) is equivalent to log level -2 in Zap, while V(1) is\nequivalent to Zap's DebugLevel.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-logr/zapr@1.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-logr/zapr",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-logr/zapr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-3eefc34a9bddd9f0",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.5"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-b7dc4c865043786c",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonpointer@v0.19.5"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonpointer@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonpointer",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonpointer",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-46fe5374e5762c69",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.20.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.20.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.20.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a1265606d8ae2657",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/jsonreference@v0.19.5"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/jsonreference@0.19.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/jsonreference",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/jsonreference",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.5"
        },
        {
            "SPDXID": "SPDXRef-Package-285125930bb64bc",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.14"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.14",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.14"
        },
        {
            "SPDXID": "SPDXRef-Package-88b54e6b76f962e8",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-openapi/swag@v0.19.14"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package swag contains a bunch of helper functions for go-openapi and go-swagger projects.\n\nYou may also use it standalone for your projects.\n\nThis repo has only few dependencies outside of the standard library:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-openapi/swag@0.19.14",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-openapi/swag",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/go-openapi/swag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.19.14"
        },
        {
            "SPDXID": "SPDXRef-Package-7012256ece5a4448",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-playground/locales@v0.14.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-playground/locales@0.14.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-playground/locales",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-playground/locales",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.14.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4d7376b28056f2ec",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-playground/universal-translator@v0.18.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-playground/universal-translator@0.18.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-playground/universal-translator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-playground/universal-translator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.18.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4ac4bf49fb7dc9a2",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-playground/validator/v10@v10.20.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package validator implements value validations for structs and individual fields\nbased on tags.\n\nIt can also handle Cross-Field and Cross-Struct validation for nested structs\nand has the ability to dive into arrays and maps of any type.\n\nsee more examples https://github.com/go-playground/validator/tree/master/_examples\n\nValidator is designed to be thread-safe and used as a singleton instance.\nIt caches information about your struct and validations,\nin essence only parsing your validation tags once per struct type.\nUsing multiple instances neglects the benefit of caching.\nThe not thread-safe functions are explicitly marked as such in the documentation.\n\nDoing things this way is actually the way the standard library does, see the\nfile.Open method here:\n\nThe authors return type \"error\" to avoid the issue discussed in the following,\nwhere err is always != nil:\n\nValidator only InvalidValidationError for bad validation input, nil or\nValidationErrors as type error; so, in your code all you need to do is check\nif the error returned is not nil, and if it's not check if error is\nInvalidValidationError ( if necessary, most of the time it isn't ) type cast\nit to type ValidationErrors like so err.(validator.ValidationErrors).\n\nCustom Validation functions can be added. Example:\n\nCross-Field Validation can be done via the following tags:\n\nIf, however, some custom cross-field validation is required, it can be done\nusing a custom validation.\n\nWhy not just have cross-fields validation tags (i.e. only eqcsfield and not\neqfield)?\n\nThe reason is efficiency. If you want to check a field within the same struct\n\"eqfield\" only has to find the field on the same struct (1 level). But, if we\nused \"eqcsfield\" it could be multiple levels down. Example:\n\nMultiple validators on a field will process in the order defined. Example:\n\nBad Validator definitions are not handled by the library. Example:\n\nBaked In Cross-Field validation only compares fields on the same struct.\nIf Cross-Field + Cross-Struct validation is needed you should implement your\nown custom validator.\n\nComma (\",\") is the default separator of validation tags. If you wish to\nhave a comma included within the parameter (i.e. excludesall=,) you will need to\nuse the UTF-8 hex representation 0x2C, which is replaced in the code as a comma,\nso the above will become excludesall=0x2C.\n\nPipe (\"|\") is the 'or' validation tags deparator. If you wish to\nhave a pipe included within the parameter i.e. excludesall=| you will need to\nuse the UTF-8 hex representation 0x7C, which is replaced in the code as a pipe,\nso the above will become excludesall=0x7C\n\nHere is a list of the current built in validators:\n\nTells the validation to skip this struct field; this is particularly\nhandy in ignoring embedded structs from being validated. (Usage: -)\n\nThis is the 'or' operator allowing multiple validators to be used and\naccepted. (Usage: rgb|rgba) <-- this would allow either rgb or rgba\ncolors to be accepted. This can also be combined with 'and' for example\n( Usage: omitempty,rgb|rgba)\n\nWhen a field that is a nested struct is encountered, and contains this flag\nany validation on the nested struct will be run, but none of the nested\nstruct fields will be validated. This is useful if inside of your program\nyou know the struct will be valid, but need to verify it has been assigned.\nNOTE: only \"required\" and \"omitempty\" can be used on a struct itself.\n\nSame as structonly tag except that any struct level validations will not run.\n\nAllows conditional validation, for example if a field is not set with\na value (Determined by the \"required\" validator) then other validation\nsuch as min or max won't run, but if a value is set validation will run.\n\nAllows to skip the validation if the value is nil (same as omitempty, but\nonly for the nil-values).\n\nThis tells the validator to dive into a slice, array or map and validate that\nlevel of the slice, array or map with the validation tags that follow.\nMultidimensional nesting is also supported, each level you wish to dive will\nrequire another dive tag. dive has some sub-tags, 'keys' & 'endkeys', please see\nthe Keys & EndKeys section just below.\n\nExample #1\n\nExample #2\n\nKeys & EndKeys\n\nThese are to be used together directly after the dive tag and tells the validator\nthat anything between 'keys' and 'endkeys' applies to the keys of a map and not the\nvalues; think of it like the 'dive' tag, but for map keys instead of values.\nMultidimensional nesting is also supported, each level you wish to validate will\nrequire another 'keys' and 'endkeys' tag. These tags are only valid for maps.\n\nExample #1\n\nExample #2\n\nThis validates that the value is not the data types default zero value.\nFor numbers ensures value is not zero. For strings ensures value is\nnot \"\". For booleans ensures value is not false. For slices, maps, pointers, interfaces, channels and functions\nensures the value is not nil. For structs ensures value is not the zero value when using WithRequiredStructEnabled.\n\nThe field under validation must be present and not empty only if all\nthe other specified fields are equal to the value following the specified\nfield. For strings ensures value is not \"\". For slices, maps, pointers,\ninterfaces, channels and functions ensures the value is not nil. For structs ensures value is not the zero value.\n\nExamples:\n\nThe field under validation must be present and not empty unless all\nthe other specified fields are equal to the value following the specified\nfield. For strings ensures value is not \"\". For slices, maps, pointers,\ninterfaces, channels and functions ensures the value is not nil. For structs ensures value is not the zero value.\n\nExamples:\n\nThe field under validation must be present and not empty only if any\nof the other specified fields are present. For strings ensures value is\nnot \"\". For slices, maps, pointers, interfaces, channels and functions\nensures the value is not nil. For structs ensures value is not the zero value.\n\nExamples:\n\nThe field under validation must be present and not empty only if all\nof the other specified fields are present. For strings ensures value is\nnot \"\". For slices, maps, pointers, interfaces, channels and functions\nensures the value is not nil. For structs ensures value is not the zero value.\n\nExample:\n\nThe field under validation must be present and not empty only when any\nof the other specified fields are not present. For strings ensures value is\nnot \"\". For slices, maps, pointers, interfaces, channels and functions\nensures the value is not nil. For structs ensures value is not the zero value.\n\nExamples:\n\nThe field under validation must be present and not empty only when all\nof the other specified fields are not present. For strings ensures value is\nnot \"\". For slices, maps, pointers, interfaces, channels and functions\nensures the value is not nil. For structs ensures value is not the zero value.\n\nExample:\n\nThe field under validation must not be present or not empty only if all\nthe other specified fields are equal to the value following the specified\nfield. For strings ensures value is not \"\". For slices, maps, pointers,\ninterfaces, channels and functions ensures the value is not nil. For structs ensures value is not the zero value.\n\nExamples:\n\nThe field under validation must not be present or empty unless all\nthe other specified fields are equal to the value following the specified\nfield. For strings ensures value is not \"\". For slices, maps, pointers,\ninterfaces, channels and functions ensures the value is not nil. For structs ensures value is not the zero value.\n\nExamples:\n\nThis validates that the value is the default value and is almost the\nopposite of required.\n\nFor numbers, length will ensure that the value is\nequal to the parameter given. For strings, it checks that\nthe string length is exactly that number of characters. For slices,\narrays, and maps, validates the number of items.\n\nExample #1\n\nExample #2 (time.Duration)\n\nFor time.Duration, len will ensure that the value is equal to the duration given\nin the parameter.\n\nFor numbers, max will ensure that the value is\nless than or equal to the parameter given. For strings, it checks\nthat the string length is at most that number of characters. For\nslices, arrays, and maps, validates the number of items.\n\nExample #1\n\nExample #2 (time.Duration)\n\nFor time.Duration, max will ensure that the value is less than or equal to the\nduration given in the parameter.\n\nFor numbers, min will ensure that the value is\ngreater or equal to the parameter given. For strings, it checks that\nthe string length is at least that number of characters. For slices,\narrays, and maps, validates the number of items.\n\nExample #1\n\nExample #2 (time.Duration)\n\nFor time.Duration, min will ensure that the value is greater than or equal to\nthe duration given in the parameter.\n\nFor strings & numbers, eq will ensure that the value is\nequal to the parameter given. For slices, arrays, and maps,\nvalidates the number of items.\n\nExample #1\n\nExample #2 (time.Duration)\n\nFor time.Duration, eq will ensure that the value is equal to the duration given\nin the parameter.\n\nFor strings & numbers, ne will ensure that the value is not\nequal to the parameter given. For slices, arrays, and maps,\nvalidates the number of items.\n\nExample #1\n\nExample #2 (time.Duration)\n\nFor time.Duration, ne will ensure that the value is not equal to the duration\ngiven in the parameter.\n\nFor strings, ints, and uints, oneof will ensure that the value\nis one of the values in the parameter.  The parameter should be\na list of values separated by whitespace. Values may be\nstrings or numbers. To match strings with spaces in them, include\nthe target string between single quotes. Kind of like an 'enum'.\n\nWorks the same as oneof but is case insensitive and therefore only accepts strings.\n\nFor numbers, this will ensure that the value is greater than the\nparameter given. For strings, it checks that the string length\nis greater than that number of characters. For slices, arrays\nand maps it validates the number of items.\n\nExample #1\n\nExample #2 (time.Time)\n\nFor time.Time ensures the time value is greater than time.Now.UTC().\n\nExample #3 (time.Duration)\n\nFor time.Duration, gt will ensure that the value is greater than the duration\ngiven in the parameter.\n\nSame as 'min' above. Kept both to make terminology with 'len' easier.\n\nExample #1\n\nExample #2 (time.Time)\n\nFor time.Time ensures the time value is greater than or equal to time.Now.UTC().\n\nExample #3 (time.Duration)\n\nFor time.Duration, gte will ensure that the value is greater than or equal to\nthe duration given in the parameter.\n\nFor numbers, this will ensure that the value is less than the parameter given.\nFor strings, it checks that the string length is less than that number of\ncharacters. For slices, arrays, and maps it validates the number of items.\n\nExample #1\n\nExample #2 (time.Time)\n\nFor time.Time ensures the time value is less than time.Now.UTC().\n\nExample #3 (time.Duration)\n\nFor time.Duration, lt will ensure that the value is less than the duration given\nin the parameter.\n\nSame as 'max' above. Kept both to make terminology with 'len' easier.\n\nExample #1\n\nExample #2 (time.Time)\n\nFor time.Time ensures the time value is less than or equal to time.Now.UTC().\n\nExample #3 (time.Duration)\n\nFor time.Duration, lte will ensure that the value is less than or equal to the\nduration given in the parameter.\n\nThis will validate the field value against another fields value either within\na struct or passed in field.\n\nExample #1:\n\nExample #2:\n\nField Equals Another Field (relative)\n\nThis does the same as eqfield except that it validates the field provided relative\nto the top level struct.\n\nThis will validate the field value against another fields value either within\na struct or passed in field.\n\nExamples:\n\nField Does Not Equal Another Field (relative)\n\nThis does the same as nefield except that it validates the field provided\nrelative to the top level struct.\n\nOnly valid for Numbers, time.Duration and time.Time types, this will validate\nthe field value against another fields value either within a struct or passed in\nfield. usage examples are for validation of a Start and End date:\n\nExample #1:\n\nExample #2:\n\nThis does the same as gtfield except that it validates the field provided\nrelative to the top level struct.\n\nOnly valid for Numbers, time.Duration and time.Time types, this will validate\nthe field value against another fields value either within a struct or passed in\nfield. usage examples are for validation of a Start and End date:\n\nExample #1:\n\nExample #2:\n\nThis does the same as gtefield except that it validates the field provided relative\nto the top level struct.\n\nOnly valid for Numbers, time.Duration and time.Time types, this will validate\nthe field value against another fields value either within a struct or passed in\nfield. usage examples are for validation of a Start and End date:\n\nExample #1:\n\nExample #2:\n\nThis does the same as ltfield except that it validates the field provided relative\nto the top level struct.\n\nOnly valid for Numbers, time.Duration and time.Time types, this will validate\nthe field value against another fields value either within a struct or passed in\nfield. usage examples are for validation of a Start and End date:\n\nExample #1:\n\nExample #2:\n\nThis does the same as ltefield except that it validates the field provided relative\nto the top level struct.\n\nThis does the same as contains except for struct fields. It should only be used\nwith string types. See the behavior of reflect.Value.String() for behavior on\nother types.\n\nThis does the same as excludes except for struct fields. It should only be used\nwith string types. See the behavior of reflect.Value.String() for behavior on\nother types.\n\nFor arrays & slices, unique will ensure that there are no duplicates.\nFor maps, unique will ensure that there are no duplicate values.\nFor slices of struct, unique will ensure that there are no duplicate values\nin a field of the struct specified via a parameter.\n\nThis validates that a string value contains ASCII alpha characters only\n\nThis validates that a string value contains ASCII alphanumeric characters only\n\nThis validates that a string value contains unicode alpha characters only\n\nThis validates that a string value contains unicode alphanumeric characters only\n\nThis validates that a string value can successfully be parsed into a boolean with strconv.ParseBool\n\nThis validates that a string value contains number values only.\nFor integers or float it returns true.\n\nThis validates that a string value contains a basic numeric value.\nbasic excludes exponents etc...\nfor integers or float it returns true.\n\nThis validates that a string value contains a valid hexadecimal.\n\nThis validates that a string value contains a valid hex color including\nhashtag (#)\n\nThis validates that a string value contains only lowercase characters. An empty string is not a valid lowercase string.\n\nThis validates that a string value contains only uppercase characters. An empty string is not a valid uppercase string.\n\nThis validates that a string value contains a valid rgb color\n\nThis validates that a string value contains a valid rgba color\n\nThis validates that a string value contains a valid hsl color\n\nThis validates that a string value contains a valid hsla color\n\nThis validates that a string value contains a valid E.164 Phone number\nhttps://en.wikipedia.org/wiki/E.164 (ex. +1123456789)\n\nThis validates that a string value contains a valid email\nThis may not conform to all possibilities of any rfc standard, but neither\ndoes any email provider accept all possibilities.\n\nThis validates that a string value is valid JSON\n\nThis validates that a string value is a valid JWT\n\nThis validates that a string value contains a valid file path and that\nthe file exists on the machine.\nThis is done using os.Stat, which is a platform independent function.\n\nThis validates that a string value contains a valid file path and that\nthe file exists on the machine and is an image.\nThis is done using os.Stat and github.com/gabriel-vasile/mimetype\n\nThis validates that a string value contains a valid file path but does not\nvalidate the existence of that file.\nThis is done using os.Stat, which is a platform independent function.\n\nThis validates that a string value contains a valid url\nThis will accept any url the golang request uri accepts but must contain\na schema for example http:// or rtmp://\n\nThis validates that a string value contains a valid uri\nThis will accept any uri the golang request uri accepts\n\nThis validates that a string value contains a valid URN\naccording to the RFC 2141 spec.\n\nThis validates that a string value contains a valid bas324 value.\nAlthough an empty string is valid base32 this will report an empty string\nas an error, if you wish to accept an empty string as valid you can use\nthis with the omitempty tag.\n\nThis validates that a string value contains a valid base64 value.\nAlthough an empty string is valid base64 this will report an empty string\nas an error, if you wish to accept an empty string as valid you can use\nthis with the omitempty tag.\n\nThis validates that a string value contains a valid base64 URL safe value\naccording the RFC4648 spec.\nAlthough an empty string is a valid base64 URL safe value, this will report\nan empty string as an error, if you wish to accept an empty string as valid\nyou can use this with the omitempty tag.\n\nThis validates that a string value contains a valid base64 URL safe value,\nbut without = padding, according the RFC4648 spec, section 3.2.\nAlthough an empty string is a valid base64 URL safe value, this will report\nan empty string as an error, if you wish to accept an empty string as valid\nyou can use this with the omitempty tag.\n\nThis validates that a string value contains a valid bitcoin address.\nThe format of the string is checked to ensure it matches one of the three formats\nP2PKH, P2SH and performs checksum validation.\n\nBitcoin Bech32 Address (segwit)\n\nThis validates that a string value contains a valid bitcoin Bech32 address as defined\nby bip-0173 (https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki)\nSpecial thanks to Pieter Wuille for providing reference implementations.\n\nThis validates that a string value contains a valid ethereum address.\nThe format of the string is checked to ensure it matches the standard Ethereum address format.\n\nThis validates that a string value contains the substring value.\n\nThis validates that a string value contains any Unicode code points\nin the substring value.\n\nThis validates that a string value contains the supplied rune value.\n\nThis validates that a string value does not contain the substring value.\n\nThis validates that a string value does not contain any Unicode code\npoints in the substring value.\n\nThis validates that a string value does not contain the supplied rune value.\n\nThis validates that a string value starts with the supplied string value\n\nThis validates that a string value ends with the supplied string value\n\nThis validates that a string value does not start with the supplied string value\n\nThis validates that a string value does not end with the supplied string value\n\nThis validates that a string value contains a valid isbn10 or isbn13 value.\n\nThis validates that a string value contains a valid isbn10 value.\n\nThis validates that a string value contains a valid isbn13 value.\n\nThis validates that a string value contains a valid UUID. Uppercase UUID values will not pass - use `uuid_rfc4122` instead.\n\nThis validates that a string value contains a valid version 3 UUID.  Uppercase UUID values will not pass - use `uuid3_rfc4122` instead.\n\nThis validates that a string value contains a valid version 4 UUID.  Uppercase UUID values will not pass - use `uuid4_rfc4122` instead.\n\nThis validates that a string value contains a valid version 5 UUID.  Uppercase UUID values will not pass - use `uuid5_rfc4122` instead.\n\nThis validates that a string value contains a valid ULID value.\n\nThis validates that a string value contains only ASCII characters.\nNOTE: if the string is blank, this validates as true.\n\nThis validates that a string value contains only printable ASCII characters.\nNOTE: if the string is blank, this validates as true.\n\nThis validates that a string value contains one or more multibyte characters.\nNOTE: if the string is blank, this validates as true.\n\nThis validates that a string value contains a valid DataURI.\nNOTE: this will also validate that the data portion is valid base64\n\nThis validates that a string value contains a valid latitude.\n\nThis validates that a string value contains a valid longitude.\n\nThis validates that a string value contains a valid U.S. Social Security Number.\n\nThis validates that a string value contains a valid IP Address.\n\nThis validates that a string value contains a valid v4 IP Address.\n\nThis validates that a string value contains a valid v6 IP Address.\n\nThis validates that a string value contains a valid CIDR Address.\n\nThis validates that a string value contains a valid v4 CIDR Address.\n\nThis validates that a string value contains a valid v6 CIDR Address.\n\nThis validates that a string value contains a valid resolvable TCP Address.\n\nThis validates that a string value contains a valid resolvable v4 TCP Address.\n\nThis validates that a string value contains a valid resolvable v6 TCP Address.\n\nThis validates that a string value contains a valid resolvable UDP Address.\n\nThis validates that a string value contains a valid resolvable v4 UDP Address.\n\nThis validates that a string value contains a valid resolvable v6 UDP Address.\n\nThis validates that a string value contains a valid resolvable IP Address.\n\nThis validates that a string value contains a valid resolvable v4 IP Address.\n\nThis validates that a string value contains a valid resolvable v6 IP Address.\n\nThis validates that a string value contains a valid Unix Address.\n\nThis validates that a string value contains a valid MAC Address.\n\nNote: See Go's ParseMAC for accepted formats and types:\n\nThis validates that a string value is a valid Hostname according to RFC 952 https://tools.ietf.org/html/rfc952\n\nThis validates that a string value is a valid Hostname according to RFC 1123 https://tools.ietf.org/html/rfc1123\n\nFull Qualified Domain Name (FQDN)\n\nThis validates that a string value contains a valid FQDN.\n\nThis validates that a string value appears to be an HTML element tag\nincluding those described at https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n\nThis validates that a string value is a proper character reference in decimal\nor hexadecimal format\n\nThis validates that a string value is percent-encoded (URL encoded) according\nto https://tools.ietf.org/html/rfc3986#section-2.1\n\nThis validates that a string value contains a valid directory and that\nit exists on the machine.\nThis is done using os.Stat, which is a platform independent function.\n\nThis validates that a string value contains a valid directory but does\nnot validate the existence of that directory.\nThis is done using os.Stat, which is a platform independent function.\nIt is safest to suffix the string with os.PathSeparator if the directory\nmay not exist at the time of validation.\n\nThis validates that a string value contains a valid DNS hostname and port that\ncan be used to validate fields typically passed to sockets and connections.\n\nThis validates that a string value is a valid datetime based on the supplied datetime format.\nSupplied format must match the official Go time format layout as documented in https://golang.org/pkg/time/\n\nThis validates that a string value is a valid country code based on iso3166-1 alpha-2 standard.\nsee: https://www.iso.org/iso-3166-country-codes.html\n\nThis validates that a string value is a valid country code based on iso3166-1 alpha-3 standard.\nsee: https://www.iso.org/iso-3166-country-codes.html\n\nThis validates that a string value is a valid country code based on iso3166-1 alpha-numeric standard.\nsee: https://www.iso.org/iso-3166-country-codes.html\n\nThis validates that a string value is a valid BCP 47 language tag, as parsed by language.Parse.\nMore information on https://pkg.go.dev/golang.org/x/text/language\n\nBIC (SWIFT code)\n\nThis validates that a string value is a valid Business Identifier Code (SWIFT code), defined in ISO 9362.\nMore information on https://www.iso.org/standard/60390.html\n\nThis validates that a string value is a valid dns RFC 1035 label, defined in RFC 1035.\nMore information on https://datatracker.ietf.org/doc/html/rfc1035\n\nThis validates that a string value is a valid time zone based on the time zone database present on the system.\nAlthough empty value and Local value are allowed by time.LoadLocation golang function, they are not allowed by this validator.\nMore information on https://golang.org/pkg/time/#LoadLocation\n\nThis validates that a string value is a valid semver version, defined in Semantic Versioning 2.0.0.\nMore information on https://semver.org/\n\nThis validates that a string value is a valid cve id, defined in cve mitre.\nMore information on https://cve.mitre.org/\n\nThis validates that a string value contains a valid credit card number using Luhn algorithm.\n\nThis validates that a string or (u)int value contains a valid checksum using the Luhn algorithm.\n\nThis validates that a string is a valid 24 character hexadecimal string or valid connection string.\n\nExample:\n\nThis validates that a string value contains a valid cron expression.\n\nThis validates that a string is valid for use with SpiceDb for the indicated purpose. If no purpose is given, a purpose of 'id' is assumed.\n\nAlias Validators and Tags\nNOTE: When returning an error, the tag returned in \"FieldError\" will be\nthe alias tag unless the dive tag is part of the alias. Everything after the\ndive tag is not reported as the alias tag. Also, the \"ActualTag\" in the before\ncase will be the actual tag within the alias that failed.\n\nHere is a list of the current built in alias tags:\n\nValidator notes:\n\nA collection of validation rules that are frequently needed but are more\ncomplex than the ones found in the baked in validators.\nA non standard validator must be registered manually like you would\nwith your own custom validation functions.\n\nExample of registration and use:\n\nHere is a list of the current non standard validators:\n\nThis package panics when bad input is provided, this is by design, bad code like\nthat should not make it to production.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-playground/validator/v10@10.20.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-playground/validator",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-playground/validator/v10",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Go Playgound",
            "versionInfo": "10.20.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6ea1edd8c5bf32a1",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-sql-driver/mysql@v1.6.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package mysql provides a MySQL driver for Go's database/sql package.\n\nThe driver should be used via the database/sql package:\n\nSee https://github.com/go-sql-driver/mysql#usage for details",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-sql-driver/mysql@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-sql-driver/mysql",
            "licenseConcluded": "MPL-2.0",
            "licenseDeclared": "MPL-2.0",
            "name": "github.com/go-sql-driver/mysql",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Go SQL Drivers",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-488667ef2e76e90",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/go-task/slim-sprig/v3@v3.0.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package sprig provides template functions for Go.\n\nThis package contains a number of utility functions for working with data\ninside of Go `html/template` and `text/template` files.\n\nTo add these functions, use the `template.Funcs()` method:\n\nNote that you should add the function map before you parse any template files.\n\nSee http://masterminds.github.io/sprig/ for more detailed documentation on each of the available functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/go-task/slim-sprig/v3@3.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-task/slim-sprig",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/go-task/slim-sprig/v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "3.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-155005681d12aee9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/goccy/go-json@v0.10.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/goccy/go-json@0.10.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/goccy/go-json",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/goccy/go-json",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Masaaki Goshima",
            "versionInfo": "0.10.2"
        },
        {
            "SPDXID": "SPDXRef-Package-ddf379f0f6204c7d",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/goccy/go-json@v0.8.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/goccy/go-json@0.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/goccy/go-json",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/goccy/go-json",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Masaaki Goshima",
            "versionInfo": "0.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-5b8ee6c91c47990e",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.3.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-8b81505ecf11b93",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/gogo/protobuf@v1.3.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/gogo/protobuf@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gogo/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/gogo/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: gogoprotobuf",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Package-1a88d5da94f707cb",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/glog@v1.0.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package glog implements logging analogous to the Google-internal C++ INFO/ERROR/V setup.\nIt provides functions that have a name matched by regex:\n\nIf Context is present, function takes context.Context argument. The\ncontext is used to pass through the Trace Context to log sinks that can make use\nof it.\nIt is recommended to use the context variant of the functions over the non-context\nvariants if a context is available to make sure the Trace Contexts are present\nin logs.\n\nIf Depth is present, this function calls log from a different depth in the call stack.\nThis enables a callee to emit logs that use the callsite information of its caller\nor any other callers in the stack. When depth == 0, the original callee's line\ninformation is emitted. When depth > 0, depth frames are skipped in the call stack\nand the final frame is treated like the original callee to Info.\n\nIf 'f' is present, function formats according to a format specifier.\n\nThis package also provides V-style logging controlled by the -v and -vmodule=file=2 flags.\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to files in a temporary directory.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.\n\nOther flags provide aids to debugging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/glog@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/glog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/glog",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ec19cc1062e71ed0",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/glog@v1.0.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package glog implements logging analogous to the Google-internal C++ INFO/ERROR/V setup.\nIt provides functions that have a name matched by regex:\n\nIf Context is present, function takes context.Context argument. The\ncontext is used to pass through the Trace Context to log sinks that can make use\nof it.\nIt is recommended to use the context variant of the functions over the non-context\nvariants if a context is available to make sure the Trace Contexts are present\nin logs.\n\nIf Depth is present, this function calls log from a different depth in the call stack.\nThis enables a callee to emit logs that use the callsite information of its caller\nor any other callers in the stack. When depth == 0, the original callee's line\ninformation is emitted. When depth > 0, depth frames are skipped in the call stack\nand the final frame is treated like the original callee to Info.\n\nIf 'f' is present, function formats according to a format specifier.\n\nThis package also provides V-style logging controlled by the -v and -vmodule=file=2 flags.\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to files in a temporary directory.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.\n\nOther flags provide aids to debugging.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/glog@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/glog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/glog",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6325588cc7bd2380",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/groupcache@v0.0.0-20210331224755-41bb18bfe9da"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package groupcache provides a data loading mechanism with caching\nand de-duplication that works across a set of peer processes.\n\nEach data Get first consults its local cache, otherwise delegates\nto the requested key's canonical owner, which then checks its cache\nor finally gets the data.  In the common case, many concurrent\ncache misses across a set of peers for the same key result in just\none cache fill.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/groupcache@0.0.0-20210331224755-41bb18bfe9da",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/groupcache",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/groupcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20210331224755-41bb18bfe9da"
        },
        {
            "SPDXID": "SPDXRef-Package-8e4d51ec2fb77497",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/groupcache@v0.0.0-20210331224755-41bb18bfe9da"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package groupcache provides a data loading mechanism with caching\nand de-duplication that works across a set of peer processes.\n\nEach data Get first consults its local cache, otherwise delegates\nto the requested key's canonical owner, which then checks its cache\nor finally gets the data.  In the common case, many concurrent\ncache misses across a set of peers for the same key result in just\none cache fill.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/groupcache@0.0.0-20210331224755-41bb18bfe9da",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/groupcache",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/golang/groupcache",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.0-20210331224755-41bb18bfe9da"
        },
        {
            "SPDXID": "SPDXRef-Package-a9fe9767997b0bf5",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.5.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.5.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.5.2"
        },
        {
            "SPDXID": "SPDXRef-Package-b895af2a2d43a623",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/protobuf@v1.5.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/protobuf@1.5.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/protobuf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.5.2"
        },
        {
            "SPDXID": "SPDXRef-Package-9873bba6491bf4ff",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/golang/snappy@v0.0.4"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package snappy implements the Snappy compression format. It aims for very\nhigh speeds and reasonable compression.\n\nThere are actually two Snappy formats: block and stream. They are related,\nbut different: trying to decompress block-compressed data as a Snappy stream\nwill fail, and vice versa. The block format is the Decode and Encode\nfunctions and the stream format is the Reader and Writer types.\n\nThe block format, the more common case, is used when the complete size (the\nnumber of bytes) of the original data is known upfront, at the time\ncompression starts. The stream format, also known as the framing format, is\nfor when that isn't always true.\n\nThe canonical, C++ implementation is at https://github.com/google/snappy and\nit only implements the block format.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/golang/snappy@0.0.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/snappy",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/golang/snappy",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "0.0.4"
        },
        {
            "SPDXID": "SPDXRef-Package-4a0d65e11ef4cff8",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gnostic@v0.5.7-v3refs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gnostic is a tool for building better REST APIs through knowledge.\n\nGnostic reads declarative descriptions of REST APIs that conform\nto the OpenAPI Specification, reports errors, resolves internal\ndependencies, and puts the results in a binary form that can\nbe used in any language that is supported by the Protocol Buffer\ntools.\n\nGnostic models are validated and typed. This allows API tool\ndevelopers to focus on their product and not worry about input\nvalidation and type checking.\n\nGnostic calls plugins that implement a variety of API implementation\nand support features including generation of client and server\nsupport code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gnostic@0.5.7-v3refs",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gnostic",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gnostic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.7-v3refs"
        },
        {
            "SPDXID": "SPDXRef-Package-f28e24a18af92b60",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gnostic@v0.5.7-v3refs"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gnostic is a tool for building better REST APIs through knowledge.\n\nGnostic reads declarative descriptions of REST APIs that conform\nto the OpenAPI Specification, reports errors, resolves internal\ndependencies, and puts the results in a binary form that can\nbe used in any language that is supported by the Protocol Buffer\ntools.\n\nGnostic models are validated and typed. This allows API tool\ndevelopers to focus on their product and not worry about input\nvalidation and type checking.\n\nGnostic calls plugins that implement a variety of API implementation\nand support features including generation of client and server\nsupport code.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gnostic@0.5.7-v3refs",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gnostic",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gnostic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.7-v3refs"
        },
        {
            "SPDXID": "SPDXRef-Package-61a632d6da9a8dbb",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.5.8"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.5.8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.8"
        },
        {
            "SPDXID": "SPDXRef-Package-8727f22e8f4d9363",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.6.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ed0a053162713e1",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/go-cmp@v0.5.9"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/go-cmp@0.5.9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/go-cmp",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/go-cmp",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.5.9"
        },
        {
            "SPDXID": "SPDXRef-Package-5938ccf0fcbcaec5",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gofuzz@v1.1.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fuzz is a library for populating go objects with random values.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gofuzz@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gofuzz",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gofuzz",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ccbc5e6fe59f2de9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/gofuzz@v1.1.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package fuzz is a library for populating go objects with random values.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/gofuzz@1.1.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/gofuzz",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/gofuzz",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.1.0"
        },
        {
            "SPDXID": "SPDXRef-Package-fb14127f10b17ee9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/pprof@v0.0.0-20241210010833-40e02aabc2ad"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "pprof is a tool for collection, manipulation and visualization\nof performance profiles.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/pprof@0.0.0-20241210010833-40e02aabc2ad",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/pprof",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/google/pprof",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "0.0.0-20241210010833-40e02aabc2ad"
        },
        {
            "SPDXID": "SPDXRef-Package-80eee8122160acf2",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/uuid@v1.1.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uuid generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nA UUID is a 16 byte (128 bit) array.  UUIDs may be used as keys to\nmaps or compared directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/uuid@1.1.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.1.2"
        },
        {
            "SPDXID": "SPDXRef-Package-a8f30bef6d93543f",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/google/uuid@v1.3.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package uuid generates and inspects UUIDs.\n\nUUIDs are based on RFC 4122 and DCE 1.1: Authentication and Security\nServices.\n\nA UUID is a 16 byte (128 bit) array.  UUIDs may be used as keys to\nmaps or compared directly.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/google/uuid@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/uuid",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/google/uuid",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Google",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9e3376059eefa416",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/imdario/mergo@v0.3.12"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "A helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\n\nMergo merges same-type structs and maps by setting default values in zero-value fields. Mergo won't merge unexported (private) fields. It will do recursively any exported one. It also won't merge structs inside maps (because they are not addressable using Go reflection).\n\nIt is ready for production use. It is used in several projects by Docker, Google, The Linux Foundation, VMWare, Shopify, etc.\n\nPlease keep in mind that a problematic PR broke 0.3.9. We reverted it in 0.3.10. We consider 0.3.10 as stable but not bug-free. . Also, this version adds suppot for go modules.\n\nKeep in mind that in 0.3.2, Mergo changed Merge() and Map() signatures to support transformers. We added an optional/variadic argument so that it won't break the existing code.\n\nIf you were using Mergo before April 6th, 2015, please check your project works as intended after updating your local copy with go get -u github.com/imdario/mergo. I apologize for any issue caused by its previous behavior and any future bug that Mergo could cause in existing projects after the change (release 0.2.0).\n\nDo your usual installation procedure:\n\nYou can only merge same-type structs with exported fields initialized as zero value of their type and same-types maps. Mergo won't merge unexported (private) fields but will do recursively any exported one. It won't merge empty structs value as they are zero values too. Also, maps will be merged recursively except for structs inside maps (because they are not addressable using Go reflection).\n\nAlso, you can merge overwriting values using the transformer WithOverride.\n\nAdditionally, you can map a map[string]interface{} to a struct (and otherwise, from struct to map), following the same restrictions as in Merge(). Keys are capitalized to find each corresponding exported field.\n\nWarning: if you map a struct to map, it won't do it recursively. Don't expect Mergo to map struct members of your struct as map[string]interface{}. They will be just assigned as values.\n\nHere is a nice example:\n\nTransformers allow to merge specific types differently than in the default behavior. In other words, now you can customize how some types are merged. For example, time.Time is a struct; it doesn't have zero value but IsZero can return true because it has fields with zero value. How can we merge a non-zero time.Time?\n\nIf I can help you, you have an idea or you are using Mergo in your projects, don't hesitate to drop me a line (or a pull request): https://twitter.com/im_dario\n\nWritten by Dario Casta\u00f1\u00e9: https://da.rio.hn\n\nBSD 3-Clause license, as Go language.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/imdario/mergo@0.3.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/imdario/mergo",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/imdario/mergo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Dario Casta\u00f1\u00e9",
            "versionInfo": "0.3.12"
        },
        {
            "SPDXID": "SPDXRef-Package-a89835570d4c1563",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/imdario/mergo@v0.3.12"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "A helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\n\nMergo merges same-type structs and maps by setting default values in zero-value fields. Mergo won't merge unexported (private) fields. It will do recursively any exported one. It also won't merge structs inside maps (because they are not addressable using Go reflection).\n\nIt is ready for production use. It is used in several projects by Docker, Google, The Linux Foundation, VMWare, Shopify, etc.\n\nPlease keep in mind that a problematic PR broke 0.3.9. We reverted it in 0.3.10. We consider 0.3.10 as stable but not bug-free. . Also, this version adds suppot for go modules.\n\nKeep in mind that in 0.3.2, Mergo changed Merge() and Map() signatures to support transformers. We added an optional/variadic argument so that it won't break the existing code.\n\nIf you were using Mergo before April 6th, 2015, please check your project works as intended after updating your local copy with go get -u github.com/imdario/mergo. I apologize for any issue caused by its previous behavior and any future bug that Mergo could cause in existing projects after the change (release 0.2.0).\n\nDo your usual installation procedure:\n\nYou can only merge same-type structs with exported fields initialized as zero value of their type and same-types maps. Mergo won't merge unexported (private) fields but will do recursively any exported one. It won't merge empty structs value as they are zero values too. Also, maps will be merged recursively except for structs inside maps (because they are not addressable using Go reflection).\n\nAlso, you can merge overwriting values using the transformer WithOverride.\n\nAdditionally, you can map a map[string]interface{} to a struct (and otherwise, from struct to map), following the same restrictions as in Merge(). Keys are capitalized to find each corresponding exported field.\n\nWarning: if you map a struct to map, it won't do it recursively. Don't expect Mergo to map struct members of your struct as map[string]interface{}. They will be just assigned as values.\n\nHere is a nice example:\n\nTransformers allow to merge specific types differently than in the default behavior. In other words, now you can customize how some types are merged. For example, time.Time is a struct; it doesn't have zero value but IsZero can return true because it has fields with zero value. How can we merge a non-zero time.Time?\n\nIf I can help you, you have an idea or you are using Mergo in your projects, don't hesitate to drop me a line (or a pull request): https://twitter.com/im_dario\n\nWritten by Dario Casta\u00f1\u00e9: https://da.rio.hn\n\nBSD 3-Clause license, as Go language.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/imdario/mergo@0.3.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/imdario/mergo",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/imdario/mergo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Dario Casta\u00f1\u00e9",
            "versionInfo": "0.3.12"
        },
        {
            "SPDXID": "SPDXRef-Package-9cb39bc3f3664e14",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/intelligent-machine-learning/dlrover/go/master"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/intelligent-machine-learning/dlrover/go/master",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "github.com/intelligent-machine-learning/dlrover/go/master",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-230f7f66bfa4f9ba",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/intelligent-machine-learning/easydl/brain"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/intelligent-machine-learning/easydl/brain",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "NOASSERTION",
            "licenseDeclared": "NOASSERTION",
            "name": "github.com/intelligent-machine-learning/easydl/brain",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION"
        },
        {
            "SPDXID": "SPDXRef-Package-b385e36b65d393ed",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/intelligent-machine-learning/easydl/dlrover/go/operator@v0.0.0-20221220215741-7f4cde713fd9"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/intelligent-machine-learning/easydl/dlrover/go/operator@0.0.0-20221220215741-7f4cde713fd9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/intelligent-machine-learning/easydl",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause",
            "name": "github.com/intelligent-machine-learning/easydl/dlrover/go/operator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: IML",
            "versionInfo": "0.0.0-20221220215741-7f4cde713fd9"
        },
        {
            "SPDXID": "SPDXRef-Package-e59d68f646b1cb3",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/intelligent-machine-learning/easydl/dlrover/go/operator"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/intelligent-machine-learning/easydl/dlrover/go/operator",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/intelligent-machine-learning/easydl",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause",
            "name": "github.com/intelligent-machine-learning/easydl/dlrover/go/operator",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: IML"
        },
        {
            "SPDXID": "SPDXRef-Package-34c9c8bbab8a2dc8",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/josharian/intern@v1.0.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package intern interns strings.\nInterning is best effort only.\nInterned strings may be removed automatically\nat any time without notification.\nAll functions may be called concurrently\nwith themselves and each other.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/josharian/intern@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/josharian/intern",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/josharian/intern",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c53631b77a409a09",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/josharian/intern@v1.0.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package intern interns strings.\nInterning is best effort only.\nInterned strings may be removed automatically\nat any time without notification.\nAll functions may be called concurrently\nwith themselves and each other.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/josharian/intern@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/josharian/intern",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/josharian/intern",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-2b15a3c53147ea3",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/json-iterator/go@v1.1.12"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jsoniter implements encoding and decoding of JSON as defined in\nRFC 4627 and provides interfaces with identical syntax of standard lib encoding/json.\nConverting from encoding/json to jsoniter is no more than replacing the package with jsoniter\nand variable type declarations (if any).\njsoniter interfaces gives 100% compatibility with code using standard lib.\n\n\"JSON and Go\"\n(https://golang.org/doc/articles/json_and_go.html)\ngives a description of how Marshal/Unmarshal operate\nbetween arbitrary or predefined json objects and bytes,\nand it applies to jsoniter.Marshal/Unmarshal as well.\n\nBesides, jsoniter.Iterator provides a different set of interfaces\niterating given bytes/string/reader\nand yielding parsed elements one by one.\nThis set of interfaces reads input as required and gives\nbetter performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/json-iterator/go@1.1.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/json-iterator/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/json-iterator/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Jsoniter",
            "versionInfo": "1.1.12"
        },
        {
            "SPDXID": "SPDXRef-Package-300a57510b78e501",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/json-iterator/go@v1.1.12"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jsoniter implements encoding and decoding of JSON as defined in\nRFC 4627 and provides interfaces with identical syntax of standard lib encoding/json.\nConverting from encoding/json to jsoniter is no more than replacing the package with jsoniter\nand variable type declarations (if any).\njsoniter interfaces gives 100% compatibility with code using standard lib.\n\n\"JSON and Go\"\n(https://golang.org/doc/articles/json_and_go.html)\ngives a description of how Marshal/Unmarshal operate\nbetween arbitrary or predefined json objects and bytes,\nand it applies to jsoniter.Marshal/Unmarshal as well.\n\nBesides, jsoniter.Iterator provides a different set of interfaces\niterating given bytes/string/reader\nand yielding parsed elements one by one.\nThis set of interfaces reads input as required and gives\nbetter performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/json-iterator/go@1.1.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/json-iterator/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/json-iterator/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Jsoniter",
            "versionInfo": "1.1.12"
        },
        {
            "SPDXID": "SPDXRef-Package-e410699fd799f6c8",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/json-iterator/go@v1.1.12"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package jsoniter implements encoding and decoding of JSON as defined in\nRFC 4627 and provides interfaces with identical syntax of standard lib encoding/json.\nConverting from encoding/json to jsoniter is no more than replacing the package with jsoniter\nand variable type declarations (if any).\njsoniter interfaces gives 100% compatibility with code using standard lib.\n\n\"JSON and Go\"\n(https://golang.org/doc/articles/json_and_go.html)\ngives a description of how Marshal/Unmarshal operate\nbetween arbitrary or predefined json objects and bytes,\nand it applies to jsoniter.Marshal/Unmarshal as well.\n\nBesides, jsoniter.Iterator provides a different set of interfaces\niterating given bytes/string/reader\nand yielding parsed elements one by one.\nThis set of interfaces reads input as required and gives\nbetter performance.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/json-iterator/go@1.1.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/json-iterator/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/json-iterator/go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Jsoniter",
            "versionInfo": "1.1.12"
        },
        {
            "SPDXID": "SPDXRef-Package-7dd08b9836cf1ad2",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/klauspost/cpuid/v2@v2.2.7"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package cpuid provides information about the CPU running the current program.\n\nCPU features are detected on startup, and kept for fast access through the life of the application.\nCurrently x86 / x64 (AMD64) as well as arm64 is supported.\n\nYou can access the CPU information by accessing the shared CPU variable of the cpuid library.\n\nPackage home: https://github.com/klauspost/cpuid",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/klauspost/cpuid/v2@2.2.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/klauspost/cpuid",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/klauspost/cpuid/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Klaus Post",
            "versionInfo": "2.2.7"
        },
        {
            "SPDXID": "SPDXRef-Package-ec997d89351f237b",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/leodido/go-urn@v1.4.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/leodido/go-urn@1.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/leodido/go-urn",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/leodido/go-urn",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-55717c713a730bec",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.6"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.6"
        },
        {
            "SPDXID": "SPDXRef-Package-79512ff73d243aa",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mailru/easyjson@v0.7.6"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package easyjson contains marshaler/unmarshaler interfaces and helper functions.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mailru/easyjson@0.7.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mailru/easyjson",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mailru/easyjson",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Free and open source software developed at VK",
            "versionInfo": "0.7.6"
        },
        {
            "SPDXID": "SPDXRef-Package-97e03a1e42dcd860",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/mattn/go-isatty@v0.0.20"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package isatty implements interface to isatty",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/mattn/go-isatty@0.0.20",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/mattn/go-isatty",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/mattn/go-isatty",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: mattn",
            "versionInfo": "0.0.20"
        },
        {
            "SPDXID": "SPDXRef-Package-35973b3dbf8ef6f9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-5552115026755bad",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/matttproud/golang_protobuf_extensions@v1.0.2-0.20181231171920-c182affec369"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/matttproud/golang_protobuf_extensions@1.0.2-0.20181231171920-c182affec369",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/matttproud/golang_protobuf_extensions",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/matttproud/golang_protobuf_extensions",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.2-0.20181231171920-c182affec369"
        },
        {
            "SPDXID": "SPDXRef-Package-1a671efbd66d3c26",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/concurrent@v0.0.0-20180306012644-bacd9c7ef1dd"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/concurrent@0.0.0-20180306012644-bacd9c7ef1dd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/concurrent",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/concurrent",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180306012644-bacd9c7ef1dd"
        },
        {
            "SPDXID": "SPDXRef-Package-9a6daa5a4d1195d8",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/concurrent@v0.0.0-20180306012644-bacd9c7ef1dd"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/concurrent@0.0.0-20180306012644-bacd9c7ef1dd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/concurrent",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/concurrent",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180306012644-bacd9c7ef1dd"
        },
        {
            "SPDXID": "SPDXRef-Package-eebe5f429e33d2e4",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/concurrent@v0.0.0-20180306012644-bacd9c7ef1dd"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/concurrent@0.0.0-20180306012644-bacd9c7ef1dd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/concurrent",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/concurrent",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20180306012644-bacd9c7ef1dd"
        },
        {
            "SPDXID": "SPDXRef-Package-75b3b9a9e4cb06fe",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/reflect2@v1.0.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/reflect2@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/reflect2",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/reflect2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Modern Go Programming",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-8cb8daebdcc12c34",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/reflect2@v1.0.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/reflect2@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/reflect2",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/reflect2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Modern Go Programming",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-f408669338c6f271",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/modern-go/reflect2@v1.0.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/modern-go/reflect2@1.0.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/modern-go/reflect2",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/modern-go/reflect2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Modern Go Programming",
            "versionInfo": "1.0.2"
        },
        {
            "SPDXID": "SPDXRef-Package-1afca953cdf6e4fc",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/munnerz/goautoneg@v0.0.0-20191010083416-a7dc8b61c822"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/munnerz/goautoneg@0.0.0-20191010083416-a7dc8b61c822",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/munnerz/goautoneg",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/munnerz/goautoneg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: James Munnelly",
            "versionInfo": "0.0.0-20191010083416-a7dc8b61c822"
        },
        {
            "SPDXID": "SPDXRef-Package-2339f1297d45e24b",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/munnerz/goautoneg@v0.0.0-20191010083416-a7dc8b61c822"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/munnerz/goautoneg@0.0.0-20191010083416-a7dc8b61c822",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/munnerz/goautoneg",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/munnerz/goautoneg",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: James Munnelly",
            "versionInfo": "0.0.0-20191010083416-a7dc8b61c822"
        },
        {
            "SPDXID": "SPDXRef-Package-569f349f4bf1589e",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/nxadm/tail@v1.4.8"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "nxadm/tail provides a Go library that emulates the features of the BSD `tail`\nprogram. The library comes with full support for truncation/move detection as\nit is designed to work with log rotation tools. The library works on all\noperating systems supported by Go, including POSIX systems like Linux and\n*BSD, and MS Windows. Go 1.9 is the oldest compiler release supported.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/nxadm/tail@1.4.8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/nxadm/tail",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/nxadm/tail",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.4.8"
        },
        {
            "SPDXID": "SPDXRef-Package-791c2d1e6354cc94",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/ginkgo@v1.16.5"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Ginkgo is a BDD-style testing framework for Golang\n\nThe godoc documentation describes Ginkgo's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/ginkgo/\n\nGinkgo's preferred matcher library is [Gomega](http://github.com/onsi/gomega)\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGinkgo is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/ginkgo@1.16.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/ginkgo",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/ginkgo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.16.5"
        },
        {
            "SPDXID": "SPDXRef-Package-44e807166801ce27",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/ginkgo/v2@v2.22.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Ginkgo is a testing framework for Go designed to help you write expressive tests.\nhttps://github.com/onsi/ginkgo\nMIT-Licensed\n\nThe godoc documentation outlines Ginkgo's API.  Since Ginkgo is a Domain-Specific Language it is important to\nbuild a mental model for Ginkgo - the narrative documentation at https://onsi.github.io/ginkgo/ is designed to help you do that.\nYou should start there - even a brief skim will be helpful.  At minimum you should skim through the https://onsi.github.io/ginkgo/#getting-started chapter.\n\nGinkgo's is best paired with the Gomega matcher library: https://github.com/onsi/gomega\n\nYou can run Ginkgo specs with go test - however we recommend using the ginkgo cli.  It enables functionality\nthat go test does not (especially running suites in parallel).  You can learn more at https://onsi.github.io/ginkgo/#ginkgo-cli-overview\nor by running 'ginkgo help'.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/ginkgo/v2@2.22.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/ginkgo",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/ginkgo/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "2.22.2"
        },
        {
            "SPDXID": "SPDXRef-Package-221c82b24ea9b0f0",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/gomega@v1.18.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gomega is the Ginkgo BDD-style testing framework's preferred matcher library.\n\nThe godoc documentation describes Gomega's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/gomega/\n\nGomega on Github: http://github.com/onsi/gomega\n\nLearn more about Ginkgo online: http://onsi.github.io/ginkgo\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGomega is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/gomega@1.18.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/gomega",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/gomega",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.18.1"
        },
        {
            "SPDXID": "SPDXRef-Package-bc063927015470a7",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/onsi/gomega@v1.36.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Gomega is the Ginkgo BDD-style testing framework's preferred matcher library.\n\nThe godoc documentation describes Gomega's API.  More comprehensive documentation (with examples!) is available at http://onsi.github.io/gomega/\n\nGomega on Github: http://github.com/onsi/gomega\n\nLearn more about Ginkgo online: http://onsi.github.io/ginkgo\n\nGinkgo on Github: http://github.com/onsi/ginkgo\n\nGomega is MIT-Licensed",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/onsi/gomega@1.36.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/onsi/gomega",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/onsi/gomega",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Onsi Fakhouri",
            "versionInfo": "1.36.2"
        },
        {
            "SPDXID": "SPDXRef-Package-225706901470de25",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pelletier/go-toml/v2@v2.2.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package toml is a library to read and write TOML documents.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pelletier/go-toml/v2@2.2.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pelletier/go-toml",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/pelletier/go-toml/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Thomas Pelletier",
            "versionInfo": "2.2.2"
        },
        {
            "SPDXID": "SPDXRef-Package-32c8b4e8b7d311f5",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.9.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-d7a7b92d7880be1a",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pkg/errors@v0.9.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package errors provides simple error handling primitives.\n\nThe traditional error handling idiom in Go is roughly akin to\n\nwhich when applied recursively up the call stack results in error reports\nwithout context or debugging information. The errors package allows\nprogrammers to add context to the failure path in their code in a way\nthat does not destroy the original value of the error.\n\nThe errors.Wrap function returns a new error that adds context to the\noriginal error by recording a stack trace at the point Wrap is called,\ntogether with the supplied message. For example\n\nIf additional control is required, the errors.WithStack and\nerrors.WithMessage functions destructure errors.Wrap into its component\noperations: annotating an error with a stack trace and with a message,\nrespectively.\n\nUsing errors.Wrap constructs a stack of errors, adding context to the\npreceding error. Depending on the nature of the error it may be necessary\nto reverse the operation of errors.Wrap to retrieve the original error\nfor inspection. Any error value which implements this interface\n\ncan be inspected by errors.Cause. errors.Cause will recursively retrieve\nthe topmost error that does not implement causer, which is assumed to be\nthe original cause. For example:\n\nAlthough the causer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nAll error values returned from this package implement fmt.Formatter and can\nbe formatted by the fmt package. The following verbs are supported:\n\nNew, Errorf, Wrap, and Wrapf record a stack trace at the point they are\ninvoked. This information can be retrieved with the following interface:\n\nThe returned errors.StackTrace type is defined as\n\nThe Frame type represents a call site in the stack trace. Frame supports\nthe fmt.Formatter interface that can be used for printing information about\nthe stack trace of this error. For example:\n\nAlthough the stackTracer interface is not exported by this package, it is\nconsidered a part of its stable public interface.\n\nSee the documentation for Frame.Format for more details.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pkg/errors@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pkg/errors",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/pkg/errors",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: pkg",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-55032bda7bf15b88",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-a60cf8167c264bd3",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/pmezard/go-difflib@v1.0.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/pmezard/go-difflib@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/pmezard/go-difflib",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/pmezard/go-difflib",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Patrick M\u00e9zard",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-55fd18de350c8e7e",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v1.14.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@1.14.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "1.14.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ed549384d63a6c10",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_golang@v1.12.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_golang@1.12.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_golang",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_golang",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "1.12.1"
        },
        {
            "SPDXID": "SPDXRef-Package-19a59eeee57ef9cc",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.2.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-76f8402ff0242170",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/client_model@v0.3.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/client_model@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/client_model",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/client_model",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-22e760bba6575a52",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.32.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.32.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.32.1"
        },
        {
            "SPDXID": "SPDXRef-Package-276654f4d9b3a930",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/common@v0.37.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/common@0.37.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/common",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/common",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.37.0"
        },
        {
            "SPDXID": "SPDXRef-Package-685fbf1aa757e983",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.7.3"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.7.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.7.3"
        },
        {
            "SPDXID": "SPDXRef-Package-ed014e6558276f31",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/prometheus/procfs@v0.8.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package procfs provides functions to retrieve system, kernel and process\nmetrics from the pseudo-filesystem proc.\n\nExample:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/prometheus/procfs@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/prometheus/procfs",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "github.com/prometheus/procfs",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Prometheus",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-145dadc61612cbdd",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sirupsen/logrus@v1.9.3"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logrus is a structured logger for Go, completely API compatible with the standard library logger.\n\nThe simplest way to use Logrus is simply the package-level exported logger:\n\nOutput:\n\nFor a full guide visit https://github.com/sirupsen/logrus\n\n\nAn example on how to use a hook",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sirupsen/logrus@1.9.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sirupsen/logrus",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sirupsen/logrus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Simon Eskildsen",
            "versionInfo": "1.9.3"
        },
        {
            "SPDXID": "SPDXRef-Package-547905efb058fb36",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/sirupsen/logrus@v1.8.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package logrus is a structured logger for Go, completely API compatible with the standard library logger.\n\nThe simplest way to use Logrus is simply the package-level exported logger:\n\nOutput:\n\nFor a full guide visit https://github.com/sirupsen/logrus\n\n\nAn example on how to use a hook",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/sirupsen/logrus@1.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/sirupsen/logrus",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/sirupsen/logrus",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Simon Eskildsen",
            "versionInfo": "1.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-31abaaa251895cf5",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-60b7ade640147ec0",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/spf13/pflag@v1.0.5"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package pflag is a drop-in replacement for Go's flag package, implementing\nPOSIX/GNU-style --flags.\n\npflag is compatible with the GNU extensions to the POSIX recommendations\nfor command-line options. See\nhttp://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html\n\nUsage:\n\npflag is a drop-in replacement of Go's native flag package. If you import\npflag under the name \"flag\" then all code should continue to function\nwith no changes.\n\nThere is one exception to this: if you directly instantiate the Flag struct\nthere is one more field \"Shorthand\" that you will need to set.\nMost code never instantiates this struct directly, and instead uses\nfunctions such as String(), BoolVar(), and Var(), and is therefore\nunaffected.\n\nDefine flags using flag.String(), Bool(), Int(), etc.\n\nThis declares an integer flag, -flagname, stored in the pointer ip, with type *int.\n\nIf you like, you can bind the flag to a variable using the Var() functions.\n\nOr you can create custom flags that satisfy the Value interface (with\npointer receivers) and couple them to flag parsing by\n\nFor such flags, the default value is just the initial value of the variable.\n\nAfter all flags are defined, call\n\nto parse the command line into the defined flags.\n\nFlags may then be used directly. If you're using the flags themselves,\nthey are all pointers; if you bind to variables, they're values.\n\nAfter parsing, the arguments after the flag are available as the\nslice flag.Args() or individually as flag.Arg(i).\nThe arguments are indexed from 0 through flag.NArg()-1.\n\nThe pflag package also defines some new functions that are not in flag,\nthat give one-letter shorthands for flags. You can use these by appending\n'P' to the name of any function that defines a flag.\n\nShorthand letters can be used with single dashes on the command line.\nBoolean shorthand flags can be combined with other shorthand flags.\n\nCommand line flag syntax:\n\nUnlike the flag package, a single dash before an option means something\ndifferent than a double dash. Single dashes signify a series of shorthand\nletters for flags. All but the last shorthand letter must be boolean flags.\n\nFlag parsing stops after the terminator \"--\". Unlike the flag package,\nflags can be interspersed with arguments anywhere on the command line\nbefore this terminator.\n\nInteger flags accept 1234, 0664, 0x1234 and may be negative.\nBoolean flags (in their long form) accept 1, 0, t, f, true, false,\nTRUE, FALSE, True, False.\nDuration flags accept any input valid for time.ParseDuration.\n\nThe default set of command-line flags is controlled by\ntop-level functions.  The FlagSet type allows one to define\nindependent sets of flags, such as to implement subcommands\nin a command-line interface. The methods of FlagSet are\nanalogous to the top-level functions for the command-line\nflag set.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/spf13/pflag@1.0.5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/spf13/pflag",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/spf13/pflag",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Steve Francia",
            "versionInfo": "1.0.5"
        },
        {
            "SPDXID": "SPDXRef-Package-8d1b68b518369686",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.7.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-bcbdb612bada19d1",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/stretchr/testify@v1.8.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package testify is a set of packages that provide many tools for testifying that your code will behave as you intend.\n\ntestify contains the following packages:\n\nThe assert package provides a comprehensive set of assertion functions that tie in to the Go testing system.\n\nThe mock package provides a system by which it is possible to mock your objects and verify calls are happening as expected.\n\nThe suite package provides a basic structure for using structs as testing suites, and methods on those structs as tests.  It includes setup/teardown functionality in the way of interfaces.\n\nA golangci-lint compatible linter for testify is available called testifylint.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/stretchr/testify@1.8.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/stretchr/testify",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/stretchr/testify",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Stretchr, Inc.",
            "versionInfo": "1.8.1"
        },
        {
            "SPDXID": "SPDXRef-Package-27edfb287851190f",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/syndtr/goleveldb@v1.0.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/syndtr/goleveldb@1.0.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/syndtr/goleveldb",
            "licenseConcluded": "BSD-2-Clause",
            "licenseDeclared": "BSD-2-Clause",
            "name": "github.com/syndtr/goleveldb",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Suryandaru Triandana",
            "versionInfo": "1.0.0"
        },
        {
            "SPDXID": "SPDXRef-Package-8aa1aaee576c6390",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/twitchyliquid64/golang-asm@v0.15.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/twitchyliquid64/golang-asm@0.15.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/twitchyliquid64/golang-asm",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "github.com/twitchyliquid64/golang-asm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.15.1"
        },
        {
            "SPDXID": "SPDXRef-Package-ee20344d737ffe05",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: github.com/ugorji/go/codec@v1.2.12"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package codec provides a\nHigh Performance, Feature-Rich Idiomatic Go 1.4+ codec/encoding library\nfor binc, msgpack, cbor, json.\n\nSupported Serialization formats are:\n\nThis package will carefully use 'package unsafe' for performance reasons in specific places.\nYou can build without unsafe use by passing the safe or appengine tag\ni.e. 'go install -tags=codec.safe ...'.\n\nThis library works with both the standard `gc` and the `gccgo` compilers.\n\nFor detailed usage information, read the primer at http://ugorji.net/blog/go-codec-primer .\n\nThe idiomatic Go support is as seen in other encoding packages in\nthe standard library (ie json, xml, gob, etc).\n\nRich Feature Set includes:\n\nUsers can register a function to handle the encoding or decoding of\ntheir custom types.\n\nThere are no restrictions on what the custom type can be. Some examples:\n\nAs an illustration, MyStructWithUnexportedFields would normally be\nencoded as an empty map because it has no exported fields, while UUID\nwould be encoded as a string. However, with extension support, you can\nencode any of these however you like.\n\nThere is also seamless support provided for registering an extension (with a tag)\nbut letting the encoding mechanism default to the standard way.\n\nThis package maintains symmetry in the encoding and decoding halfs.\nWe determine how to encode or decode by walking this decision tree\n\nThis symmetry is important to reduce chances of issues happening because the\nencoding and decoding sides are out of sync e.g. decoded via very specific\nencoding.TextUnmarshaler but encoded via kind-specific generalized mode.\n\nConsequently, if a type only defines one-half of the symmetry\n(e.g. it implements UnmarshalJSON() but not MarshalJSON() ),\nthen that type doesn't satisfy the check and we will continue walking down the\ndecision tree.\n\nRPC Client and Server Codecs are implemented, so the codecs can be used\nwith the standard net/rpc package.\n\nThe Handle is SAFE for concurrent READ, but NOT SAFE for concurrent modification.\n\nThe Encoder and Decoder are NOT safe for concurrent use.\n\nConsequently, the usage model is basically:\n\nSample usage model:\n\nTo run tests, use the following:\n\nTo run the full suite of tests, use the following:\n\nYou can run the tag 'codec.safe' to run tests or build in safe mode. e.g.\n\nRunning Benchmarks\n\nPlease see http://github.com/ugorji/go-codec-bench .\n\nStruct fields matching the following are ignored during encoding and decoding\n\nEvery other field in a struct will be encoded/decoded.\n\nEmbedded fields are encoded as if they exist in the top-level struct,\nwith some caveats. See Encode documentation.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/github.com/ugorji/go/codec@1.2.12",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/ugorji/go",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "github.com/ugorji/go/codec",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Ugorji Nwoke",
            "versionInfo": "1.2.12"
        },
        {
            "SPDXID": "SPDXRef-Package-d274aa296a073779",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/atomic@v1.7.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package atomic provides simple wrappers around numerics to enforce atomic\naccess.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/atomic@1.7.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/atomic",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/atomic",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.7.0"
        },
        {
            "SPDXID": "SPDXRef-Package-40c11085aa370966",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/multierr@v1.6.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package multierr allows combining one or more errors together.\n\nErrors can be combined with the use of the Combine function.\n\nIf only two errors are being combined, the Append function may be used\ninstead.\n\nThe underlying list of errors for a returned error object may be retrieved\nwith the Errors function.\n\nYou sometimes need to append into an error from a loop.\n\nCases like this may require knowledge of whether an individual instance\nfailed. This usually requires introduction of a new variable.\n\nmultierr includes AppendInto to simplify cases like this.\n\nThis will append the error into the err variable, and return true if that\nindividual error was non-nil.\n\nSee AppendInto for more information.\n\nGo makes it possible to modify the return value of a function in a defer\nblock if the function was using named returns. This makes it possible to\nrecord resource cleanup failures from deferred blocks.\n\nmultierr provides the Invoker type and AppendInvoke function to make cases\nlike the above simpler and obviate the need for a closure. The following is\nroughly equivalent to the example above.\n\nSee AppendInvoke and Invoker for more information.\n\nNOTE: If you're modifying an error from inside a defer, you MUST use a named\nreturn value for that function.\n\nErrors returned by Combine and Append MAY implement the following\ninterface.\n\nNote that if you need access to list of errors behind a multierr error, you\nshould prefer using the Errors function. That said, if you need cheap\nread-only access to the underlying errors slice, you can attempt to cast\nthe error to this interface. You MUST handle the failure case gracefully\nbecause errors returned by Combine and Append are not guaranteed to\nimplement this interface.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/multierr@1.6.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/multierr",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/multierr",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.6.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6046d78b45410e7",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: go.uber.org/zap@v1.19.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package zap provides fast, structured, leveled logging.\n\nFor applications that log in the hot path, reflection-based serialization\nand string formatting are prohibitively expensive - they're CPU-intensive\nand make many small allocations. Put differently, using json.Marshal and\nfmt.Fprintf to log tons of interface{} makes your application slow.\n\nZap takes a different approach. It includes a reflection-free,\nzero-allocation JSON encoder, and the base Logger strives to avoid\nserialization overhead and allocations wherever possible. By building the\nhigh-level SugaredLogger on that foundation, zap lets users choose when\nthey need to count every allocation and when they'd prefer a more familiar,\nloosely typed API.\n\nIn contexts where performance is nice, but not critical, use the\nSugaredLogger. It's 4-10x faster than other structured logging packages and\nsupports both structured and printf-style logging. Like log15 and go-kit,\nthe SugaredLogger's structured logging APIs are loosely typed and accept a\nvariadic number of key-value pairs. (For more advanced use cases, they also\naccept strongly typed fields - see the SugaredLogger.With documentation for\ndetails.)\n\nBy default, loggers are unbuffered. However, since zap's low-level APIs\nallow buffering, calling Sync before letting your process exit is a good\nhabit.\n\nIn the rare contexts where every microsecond and every allocation matter,\nuse the Logger. It's even faster than the SugaredLogger and allocates far\nless, but it only supports strongly-typed, structured logging.\n\nChoosing between the Logger and SugaredLogger doesn't need to be an\napplication-wide decision: converting between the two is simple and\ninexpensive.\n\nThe simplest way to build a Logger is to use zap's opinionated presets:\nNewExample, NewProduction, and NewDevelopment. These presets build a logger\nwith a single function call:\n\nPresets are fine for small projects, but larger projects and organizations\nnaturally require a bit more customization. For most users, zap's Config\nstruct strikes the right balance between flexibility and convenience. See\nthe package-level BasicConfiguration example for sample code.\n\nMore unusual configurations (splitting output between files, sending logs\nto a message queue, etc.) are possible, but require direct use of\ngo.uber.org/zap/zapcore. See the package-level AdvancedConfiguration\nexample for sample code.\n\nThe zap package itself is a relatively thin wrapper around the interfaces\nin go.uber.org/zap/zapcore. Extending zap to support a new encoding (e.g.,\nBSON), a new log sink (e.g., Kafka), or something more exotic (perhaps an\nexception aggregation service, like Sentry or Rollbar) typically requires\nimplementing the zapcore.Encoder, zapcore.WriteSyncer, or zapcore.Core\ninterfaces. See the zapcore documentation for details.\n\nSimilarly, package authors can use the high-performance Encoder and Core\nimplementations in the zapcore package to build their own loggers.\n\nAn FAQ covering everything from installation errors to design decisions is\navailable at https://github.com/uber-go/zap/blob/master/FAQ.md.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/go.uber.org/zap@1.19.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/uber-go/zap",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "go.uber.org/zap",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Uber Go",
            "versionInfo": "1.19.1"
        },
        {
            "SPDXID": "SPDXRef-Package-4230218a865e6281",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/arch@v0.8.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/arch@0.8.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/arch",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/arch",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.8.0"
        },
        {
            "SPDXID": "SPDXRef-Package-65a20f9c07e9c58a",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.0.0-20220214200702-86341886e292"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.0.0-20220214200702-86341886e292",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220214200702-86341886e292"
        },
        {
            "SPDXID": "SPDXRef-Package-7cd6c18509318ae1",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/crypto@v0.31.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/crypto@0.31.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/crypto",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/crypto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.31.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7f854d5875d3e651",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.4.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-ba10b7855db44520",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.33.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.33.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.33.0"
        },
        {
            "SPDXID": "SPDXRef-Package-dc35dcecb261950c",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/net@v0.0.0-20220722155237-a158d28d115b"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/net@0.0.0-20220722155237-a158d28d115b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/net",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/net",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220722155237-a158d28d115b"
        },
        {
            "SPDXID": "SPDXRef-Package-1beaa05e502c6fd3",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.0.0-20220223155221-ee480838109b"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.0.0-20220223155221-ee480838109b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220223155221-ee480838109b"
        },
        {
            "SPDXID": "SPDXRef-Package-d78dd49b561231bb",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/oauth2@v0.0.0-20211104180415-d3ed0bb246c8"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package oauth2 provides support for making\nOAuth2 authorized and authenticated HTTP requests,\nas specified in RFC 6749.\nIt can additionally grant authorization with Bearer JWT.\n\nCopyright 2023 The Go Authors. All rights reserved.\nUse of this source code is governed by a BSD-style\nlicense that can be found in the LICENSE file.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/oauth2@0.0.0-20211104180415-d3ed0bb246c8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/oauth2",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/oauth2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20211104180415-d3ed0bb246c8"
        },
        {
            "SPDXID": "SPDXRef-Package-1762477649efca31",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.3.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-5f0f6596c7b9e7b",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.28.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.28.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.28.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c1df19980382b0f0",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/sys@v0.0.0-20220722155257-8c9f86f7a55f"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/sys@0.0.0-20220722155257-8c9f86f7a55f",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/sys",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/sys",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220722155257-8c9f86f7a55f"
        },
        {
            "SPDXID": "SPDXRef-Package-96f45b9d0c700448",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/term@v0.3.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package term provides support functions for dealing with terminals, as\ncommonly found on UNIX systems.\n\nPutting a terminal into raw mode is the most common requirement:\n\nNote that on non-Unix systems os.Stdin.Fd() may not be 0.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/term@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/term",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/term",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b2a5df6a95869ac5",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/term@v0.0.0-20210927222741-03fcf44c2211"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package term provides support functions for dealing with terminals, as\ncommonly found on UNIX systems.\n\nPutting a terminal into raw mode is the most common requirement:\n\nNote that on non-Unix systems os.Stdin.Fd() may not be 0.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/term@0.0.0-20210927222741-03fcf44c2211",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/term",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/term",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20210927222741-03fcf44c2211"
        },
        {
            "SPDXID": "SPDXRef-Package-304f93dad4863af9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.5.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7ce29b39b1a8bb72",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.21.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.21.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.21.0"
        },
        {
            "SPDXID": "SPDXRef-Package-aacbc450f8aea0c9",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/text@v0.3.7"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "text is a repository of text-related packages related to internationalization\n(i18n) and localization (l10n), such as character encodings, text\ntransformations, and locale-specific text handling.\n\nThere is a 30 minute video, recorded on 2017-11-30, on the \"State of\ngolang.org/x/text\" at https://www.youtube.com/watch?v=uYrDrMEGu58",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/text@0.3.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/text",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/text",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.7"
        },
        {
            "SPDXID": "SPDXRef-Package-3b7fa61d9a5fc9d0",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.3.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d940da66d84ce708",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/time@v0.0.0-20220210224613-90d013bbcef8"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/time@0.0.0-20220210224613-90d013bbcef8",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/time",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/time",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.0.0-20220210224613-90d013bbcef8"
        },
        {
            "SPDXID": "SPDXRef-Package-1bdcca5d9148dd69",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: golang.org/x/tools@v0.28.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/golang.org/x/tools@0.28.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://cs.opensource.google/go/x/tools",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "golang.org/x/tools",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.28.0"
        },
        {
            "SPDXID": "SPDXRef-Package-437a2f3d09ae3be8",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gomodules.xyz/jsonpatch/v2@v2.2.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gomodules.xyz/jsonpatch/v2@2.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gomodules/jsonpatch",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gomodules.xyz/jsonpatch/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: gomodules",
            "versionInfo": "2.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-c47a10c1766d2b54",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gomodules.xyz/jsonpatch/v2@v2.2.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gomodules.xyz/jsonpatch/v2@2.2.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gomodules/jsonpatch",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gomodules.xyz/jsonpatch/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: gomodules",
            "versionInfo": "2.2.0"
        },
        {
            "SPDXID": "SPDXRef-Package-7d2fefe2048979ce",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.6.7"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.6.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.6.7"
        },
        {
            "SPDXID": "SPDXRef-Package-e2c73ce6f7a1efe4",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/appengine@v1.6.7"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package appengine provides basic functionality for Google App Engine.\n\nFor more information on how to write Go apps for Google App Engine, see:\nhttps://cloud.google.com/appengine/docs/go/",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/appengine@1.6.7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/golang/appengine",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/appengine",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Go",
            "versionInfo": "1.6.7"
        },
        {
            "SPDXID": "SPDXRef-Package-82ced3f757de0f53",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/genproto@v0.0.0-20220502173005-c8bf987b8c21"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/genproto@0.0.0-20220502173005-c8bf987b8c21",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/googleapis/go-genproto",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/genproto",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Google APIs",
            "versionInfo": "0.0.0-20220502173005-c8bf987b8c21"
        },
        {
            "SPDXID": "SPDXRef-Package-c0b5072be34f4197",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/grpc@v1.51.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package grpc implements an RPC system called gRPC.\n\nSee grpc.io for more information about gRPC.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/grpc@1.51.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/grpc/grpc-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "google.golang.org/grpc",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: grpc",
            "versionInfo": "1.51.0"
        },
        {
            "SPDXID": "SPDXRef-Package-4bde5c5c80488c6d",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.28.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.28.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.28.1"
        },
        {
            "SPDXID": "SPDXRef-Package-8d986efbd782a2e0",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.36.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.36.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.36.1"
        },
        {
            "SPDXID": "SPDXRef-Package-f658ef79f42104af",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: google.golang.org/protobuf@v1.27.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/google.golang.org/protobuf@1.27.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/protocolbuffers/protobuf-go",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "google.golang.org/protobuf",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Protocol Buffers",
            "versionInfo": "1.27.1"
        },
        {
            "SPDXID": "SPDXRef-Package-2562d5098660222c",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/inf.v0@v0.9.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package inf (type inf.Dec) implements \"infinite-precision\" decimal\narithmetic.\n\"Infinite precision\" describes two characteristics: practically unlimited\nprecision for decimal number representation and no support for calculating\nwith any specific fixed precision.\n(Although there is no practical limit on precision, inf.Dec can only\nrepresent finite decimals.)\n\nThis package is currently in experimental stage and the API may change.\n\nThis package does NOT support:\n\nFeatures considered for possible addition:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/inf.v0@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-inf/inf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/inf.v0",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: go-inf",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-69a6031e8e113c47",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/inf.v0@v0.9.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package inf (type inf.Dec) implements \"infinite-precision\" decimal\narithmetic.\n\"Infinite precision\" describes two characteristics: practically unlimited\nprecision for decimal number representation and no support for calculating\nwith any specific fixed precision.\n(Although there is no practical limit on precision, inf.Dec can only\nrepresent finite decimals.)\n\nThis package is currently in experimental stage and the API may change.\n\nThis package does NOT support:\n\nFeatures considered for possible addition:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/inf.v0@0.9.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-inf/inf",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/inf.v0",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: go-inf",
            "versionInfo": "0.9.1"
        },
        {
            "SPDXID": "SPDXRef-Package-25fc871535a6d1cc",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/tomb.v1@v1.0.0-20141024135613-dd632973f1e7"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "The tomb package offers a conventional API for clean goroutine termination.\n\nA Tomb tracks the lifecycle of a goroutine as alive, dying or dead,\nand the reason for its death.\n\nThe zero value of a Tomb assumes that a goroutine is about to be\ncreated or already alive. Once Kill or Killf is called with an\nargument that informs the reason for death, the goroutine is in\na dying state and is expected to terminate soon. Right before the\ngoroutine function or method returns, Done must be called to inform\nthat the goroutine is indeed dead and about to stop running.\n\nA Tomb exposes Dying and Dead channels. These channels are closed\nwhen the Tomb state changes in the respective way. They enable\nexplicit blocking until the state changes, and also to selectively\nunblock select statements accordingly.\n\nWhen the tomb state changes to dying and there's still logic going\non within the goroutine, nested functions and methods may choose to\nreturn ErrDying as their error value, as this error won't alter the\ntomb state if provided to the Kill method. This is a convenient way to\nfollow standard Go practices in the context of a dying tomb.\n\nFor background and a detailed example, see the following blog post:\n\nFor a more complex code snippet demonstrating the use of multiple\ngoroutines with a single Tomb, see:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/tomb.v1@1.0.0-20141024135613-dd632973f1e7",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-tomb/tomb",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "gopkg.in/tomb.v1",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.0.0-20141024135613-dd632973f1e7"
        },
        {
            "SPDXID": "SPDXRef-Package-3fc89a3d43189da1",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-50f833b94d12ce67",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v2@v2.4.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v2@2.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gopkg.in/yaml.v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "2.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-42727f1b0769c9e2",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.0-20210107192922-496545a6307b"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.0-20210107192922-496545a6307b",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 OR MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.0-20210107192922-496545a6307b"
        },
        {
            "SPDXID": "SPDXRef-Package-d307d88010b71cb1",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 AND MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/master/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-fc0a1abf5963868e",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: gopkg.in/yaml.v3@v3.0.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package yaml implements YAML support for the Go language.\n\nSource code and other details for the project are available at GitHub:",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/gopkg.in/yaml.v3@3.0.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/go-yaml/yaml",
            "licenseConcluded": "Apache-2.0 OR MIT",
            "licenseDeclared": "Apache-2.0 AND MIT",
            "name": "gopkg.in/yaml.v3",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: go-yaml",
            "versionInfo": "3.0.1"
        },
        {
            "SPDXID": "SPDXRef-Package-2f3157a1fa4835f7",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Python library for easily interacting with trained machine learning models",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/gradio@3.23.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gradio-app/gradio",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "gradio",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/examples/pytorch/llama2/requirements.txt",
            "supplier": "Organization: Gradio",
            "versionInfo": "3.23.0"
        },
        {
            "SPDXID": "SPDXRef-Package-1e97863131ca1e98",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/api@v0.26.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/api@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/api",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-911d7ee3fbf31bd2",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/api@v0.24.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/api@0.24.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/api",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/api",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.24.2"
        },
        {
            "SPDXID": "SPDXRef-Package-e0bbd7f562fa4c63",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apiextensions-apiserver@v0.24.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apiextensions-apiserver@0.24.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apiextensions-apiserver",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apiextensions-apiserver",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.24.2"
        },
        {
            "SPDXID": "SPDXRef-Package-37cd3225703c54e5",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apimachinery@v0.26.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apimachinery@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apimachinery",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apimachinery",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9cfb39f601f1a3a1",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/apimachinery@v0.24.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/apimachinery@0.24.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/apimachinery",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/apimachinery",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.24.2"
        },
        {
            "SPDXID": "SPDXRef-Package-89705b61ab92bd90",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/client-go@v0.24.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/client-go@0.24.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/client-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/client-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.24.2"
        },
        {
            "SPDXID": "SPDXRef-Package-b158d3c5297812ef",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/client-go@v0.26.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/client-go@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/client-go",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/client-go",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-95e47aa2055d1060",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/component-base@v0.24.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/component-base@0.24.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/component-base",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/component-base",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.24.2"
        },
        {
            "SPDXID": "SPDXRef-Package-f96caabed914b980",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/component-base@v0.26.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/component-base@0.26.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/component-base",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/component-base",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.26.0"
        },
        {
            "SPDXID": "SPDXRef-Package-b56706566e98c631",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/klog/v2@v2.60.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package klog contains the following functionality:\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to standard error.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/klog/v2@2.60.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/klog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/klog/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "2.60.1"
        },
        {
            "SPDXID": "SPDXRef-Package-be022993a7e8c989",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/klog/v2@v2.80.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package klog contains the following functionality:\n\nBasic examples:\n\nSee the documentation for the V function for an explanation of these examples:\n\nLog output is buffered and written periodically using Flush. Programs\nshould call Flush before exiting to guarantee all log output is written.\n\nBy default, all log statements write to standard error.\nThis package provides several flags that modify this behavior.\nAs a result, flag.Parse must be called before any logging is done.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/klog/v2@2.80.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/klog",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/klog/v2",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "2.80.1"
        },
        {
            "SPDXID": "SPDXRef-Package-a2c9764bafb5157b",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/kube-openapi@v0.0.0-20220328201542-3ee0da9b0b42"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/kube-openapi@0.0.0-20220328201542-3ee0da9b0b42",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/kube-openapi",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/kube-openapi",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20220328201542-3ee0da9b0b42"
        },
        {
            "SPDXID": "SPDXRef-Package-d2b7a92f980a3e10",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/kube-openapi@v0.0.0-20221012153701-172d655c2280"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/kube-openapi@0.0.0-20221012153701-172d655c2280",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/kube-openapi",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/kube-openapi",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20221012153701-172d655c2280"
        },
        {
            "SPDXID": "SPDXRef-Package-817747d25e45ebb7",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20220210201930-3a6ce19ff2f9"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20220210201930-3a6ce19ff2f9",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20220210201930-3a6ce19ff2f9"
        },
        {
            "SPDXID": "SPDXRef-Package-84b0274ff35dd61c",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: k8s.io/utils@v0.0.0-20221128185143-99ec85e7a448"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/k8s.io/utils@0.0.0-20221128185143-99ec85e7a448",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes/utils",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "k8s.io/utils",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes",
            "versionInfo": "0.0.0-20221128185143-99ec85e7a448"
        },
        {
            "SPDXID": "SPDXRef-Package-b46f4d4e52ba576e",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "A sane and fast Markdown parser with useful plugins and renderers",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/mistune@0.8.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "mistune",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: torch_xla/docs/requirements.txt",
            "supplier": "Organization: Hsiaoming Yang",
            "versionInfo": "0.8.4"
        },
        {
            "SPDXID": "SPDXRef-Package-568bdfd438fbf4fa",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Parameter-Efficient Fine-Tuning (PEFT)",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/peft@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/huggingface/peft",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "peft",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: atorch/examples/llama2_7b_ATorchTrainer/requirements.txt",
            "supplier": "Organization: Hugging Face",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-985430b72f40a928",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Parameter-Efficient Fine-Tuning (PEFT)",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/peft@0.4.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/huggingface/peft",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "peft",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: atorch/examples/llama2/requirements.txt",
            "supplier": "Organization: Hugging Face",
            "versionInfo": "0.4.0"
        },
        {
            "SPDXID": "SPDXRef-Package-e9271abfe50ac876",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Multi-Objective Optimization in Python",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/pymoo@0.5.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://pymoo.org",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "pymoo",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: atorch/atorch/requirements.txt",
            "supplier": "Organization: Anyoptimization",
            "versionInfo": "0.5.0"
        },
        {
            "SPDXID": "SPDXRef-Package-12a851b076e9ef96",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Python utilities for the NVIDIA Management Library",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/pynvml@11.4.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/gpuopenanalytics/pynvml",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "pynvml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: atorch/atorch/requirements.txt",
            "supplier": "NOASSERTION",
            "versionInfo": "11.4.1"
        },
        {
            "SPDXID": "SPDXRef-Package-1db4646a3aee0abd",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "SentencePiece python wrapper",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/sentencepiece@0.1.97",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/google/sentencepiece",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sentencepiece",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/examples/pytorch/llama2/requirements.txt",
            "supplier": "Organization: Google",
            "versionInfo": "0.1.97"
        },
        {
            "SPDXID": "SPDXRef-Package-809b12428ae9fd14",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/controller-runtime@v0.12.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package controllerruntime provides tools to construct Kubernetes-style\ncontrollers that manipulate both Kubernetes CRDs and aggregated/built-in\nKubernetes APIs.\n\nIt defines easy helpers for the common use cases when building CRDs, built\non top of customizable layers of abstraction.  Common cases should be easy,\nand uncommon cases should be possible.  In general, controller-runtime tries\nto guide users towards Kubernetes controller best-practices.\n\nThe main entrypoint for controller-runtime is this root package, which\ncontains all of the common types needed to get started building controllers:\n\nThe examples in this package walk through a basic controller setup.  The\nkubebuilder book (https://book.kubebuilder.io) has some more in-depth\nwalkthroughs.\n\ncontroller-runtime favors structs with sane defaults over constructors, so\nit's fairly common to see structs being used directly in controller-runtime.\n\nA brief-ish walkthrough of the layout of this library can be found below. Each\npackage contains more information about how to use it.\n\nFrequently asked questions about using controller-runtime and designing\ncontrollers can be found at\nhttps://github.com/kubernetes-sigs/controller-runtime/blob/main/FAQ.md.\n\nEvery controller and webhook is ultimately run by a Manager (pkg/manager). A\nmanager is responsible for running controllers and webhooks, and setting up\ncommon dependencies, like shared caches and clients, as\nwell as managing leader election (pkg/leaderelection).  Managers are\ngenerally configured to gracefully shut down controllers on pod termination\nby wiring up a signal handler (pkg/manager/signals).\n\nControllers (pkg/controller) use events (pkg/event) to eventually trigger\nreconcile requests.  They may be constructed manually, but are often\nconstructed with a Builder (pkg/builder), which eases the wiring of event\nsources (pkg/source), like Kubernetes API object changes, to event handlers\n(pkg/handler), like \"enqueue a reconcile request for the object owner\".\nPredicates (pkg/predicate) can be used to filter which events actually\ntrigger reconciles.  There are pre-written utilities for the common cases, and\ninterfaces and helpers for advanced cases.\n\nController logic is implemented in terms of Reconcilers (pkg/reconcile).  A\nReconciler implements a function which takes a reconcile Request containing\nthe name and namespace of the object to reconcile, reconciles the object,\nand returns a Response or an error indicating whether to requeue for a\nsecond round of processing.\n\nReconcilers use Clients (pkg/client) to access API objects.  The default\nclient provided by the manager reads from a local shared cache (pkg/cache)\nand writes directly to the API server, but clients can be constructed that\nonly talk to the API server, without a cache.  The Cache will auto-populate\nwith watched objects, as well as when other structured objects are\nrequested. The default split client does not promise to invalidate the cache\nduring writes (nor does it promise sequential create/get coherence), and code\nshould not assume a get immediately following a create/update will return\nthe updated resource. Caches may also have indexes, which can be created via\na FieldIndexer (pkg/client) obtained from the manager.  Indexes can used to\nquickly and easily look up all objects with certain fields set.  Reconcilers\nmay retrieve event recorders (pkg/recorder) to emit events using the\nmanager.\n\nClients, Caches, and many other things in Kubernetes use Schemes\n(pkg/scheme) to associate Go types to Kubernetes API Kinds\n(Group-Version-Kinds, to be specific).\n\nSimilarly, webhooks (pkg/webhook/admission) may be implemented directly, but\nare often constructed using a builder (pkg/webhook/admission/builder).  They\nare run via a server (pkg/webhook) which is managed by a Manager.\n\nLogging (pkg/log) in controller-runtime is done via structured logs, using a\nlog set of interfaces called logr\n(https://pkg.go.dev/github.com/go-logr/logr).  While controller-runtime\nprovides easy setup for using Zap (https://go.uber.org/zap, pkg/log/zap),\nyou can provide any implementation of logr as the base logger for\ncontroller-runtime.\n\nMetrics (pkg/metrics) provided by controller-runtime are registered into a\ncontroller-runtime-specific Prometheus metrics registry.  The manager can\nserve these by an HTTP endpoint, and additional metrics may be registered to\nthis Registry as normal.\n\nYou can easily build integration and unit tests for your controllers and\nwebhooks using the test Environment (pkg/envtest).  This will automatically\nstand up a copy of etcd and kube-apiserver, and provide the correct options\nto connect to the API server.  It's designed to work well with the Ginkgo\ntesting framework, but should work with any testing setup.\n\nThis example creates a simple application Controller that is configured for ReplicaSets and Pods.\n\n* Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\nReplicaSetReconciler.\n\n* Start the application.\n\n\nThis example creates a simple application Controller that is configured for ExampleCRDWithConfigMapRef CRD.\nAny change in the configMap referenced in this Custom Resource will cause the re-reconcile of the parent ExampleCRDWithConfigMapRef\ndue to the implementation of the .Watches method of \"sigs.k8s.io/controller-runtime/pkg/builder\".Builder.\n\n\nThis example creates a simple application Controller that is configured for ReplicaSets and Pods.\nThis application controller will be running leader election with the provided configuration in the manager options.\nIf leader election configuration is not provided, controller runs leader election with default values.\nDefault values taken from: https://github.com/kubernetes/component-base/blob/master/config/v1alpha1/defaults.go\n* defaultLeaseDuration = 15 * time.Second\n* defaultRenewDeadline = 10 * time.Second\n* defaultRetryPeriod   = 2 * time.Second\n\n* Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\nReplicaSetReconciler.\n\n* Start the application.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/controller-runtime@0.12.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/controller-runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/controller-runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.12.2"
        },
        {
            "SPDXID": "SPDXRef-Package-e299b272553bc831",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/controller-runtime@v0.14.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package controllerruntime provides tools to construct Kubernetes-style\ncontrollers that manipulate both Kubernetes CRDs and aggregated/built-in\nKubernetes APIs.\n\nIt defines easy helpers for the common use cases when building CRDs, built\non top of customizable layers of abstraction.  Common cases should be easy,\nand uncommon cases should be possible.  In general, controller-runtime tries\nto guide users towards Kubernetes controller best-practices.\n\nThe main entrypoint for controller-runtime is this root package, which\ncontains all of the common types needed to get started building controllers:\n\nThe examples in this package walk through a basic controller setup.  The\nkubebuilder book (https://book.kubebuilder.io) has some more in-depth\nwalkthroughs.\n\ncontroller-runtime favors structs with sane defaults over constructors, so\nit's fairly common to see structs being used directly in controller-runtime.\n\nA brief-ish walkthrough of the layout of this library can be found below. Each\npackage contains more information about how to use it.\n\nFrequently asked questions about using controller-runtime and designing\ncontrollers can be found at\nhttps://github.com/kubernetes-sigs/controller-runtime/blob/main/FAQ.md.\n\nEvery controller and webhook is ultimately run by a Manager (pkg/manager). A\nmanager is responsible for running controllers and webhooks, and setting up\ncommon dependencies, like shared caches and clients, as\nwell as managing leader election (pkg/leaderelection).  Managers are\ngenerally configured to gracefully shut down controllers on pod termination\nby wiring up a signal handler (pkg/manager/signals).\n\nControllers (pkg/controller) use events (pkg/event) to eventually trigger\nreconcile requests.  They may be constructed manually, but are often\nconstructed with a Builder (pkg/builder), which eases the wiring of event\nsources (pkg/source), like Kubernetes API object changes, to event handlers\n(pkg/handler), like \"enqueue a reconcile request for the object owner\".\nPredicates (pkg/predicate) can be used to filter which events actually\ntrigger reconciles.  There are pre-written utilities for the common cases, and\ninterfaces and helpers for advanced cases.\n\nController logic is implemented in terms of Reconcilers (pkg/reconcile).  A\nReconciler implements a function which takes a reconcile Request containing\nthe name and namespace of the object to reconcile, reconciles the object,\nand returns a Response or an error indicating whether to requeue for a\nsecond round of processing.\n\nReconcilers use Clients (pkg/client) to access API objects.  The default\nclient provided by the manager reads from a local shared cache (pkg/cache)\nand writes directly to the API server, but clients can be constructed that\nonly talk to the API server, without a cache.  The Cache will auto-populate\nwith watched objects, as well as when other structured objects are\nrequested. The default split client does not promise to invalidate the cache\nduring writes (nor does it promise sequential create/get coherence), and code\nshould not assume a get immediately following a create/update will return\nthe updated resource. Caches may also have indexes, which can be created via\na FieldIndexer (pkg/client) obtained from the manager.  Indexes can used to\nquickly and easily look up all objects with certain fields set.  Reconcilers\nmay retrieve event recorders (pkg/recorder) to emit events using the\nmanager.\n\nClients, Caches, and many other things in Kubernetes use Schemes\n(pkg/scheme) to associate Go types to Kubernetes API Kinds\n(Group-Version-Kinds, to be specific).\n\nSimilarly, webhooks (pkg/webhook/admission) may be implemented directly, but\nare often constructed using a builder (pkg/webhook/admission/builder).  They\nare run via a server (pkg/webhook) which is managed by a Manager.\n\nLogging (pkg/log) in controller-runtime is done via structured logs, using a\nlog set of interfaces called logr\n(https://pkg.go.dev/github.com/go-logr/logr).  While controller-runtime\nprovides easy setup for using Zap (https://go.uber.org/zap, pkg/log/zap),\nyou can provide any implementation of logr as the base logger for\ncontroller-runtime.\n\nMetrics (pkg/metrics) provided by controller-runtime are registered into a\ncontroller-runtime-specific Prometheus metrics registry.  The manager can\nserve these by an HTTP endpoint, and additional metrics may be registered to\nthis Registry as normal.\n\nYou can easily build integration and unit tests for your controllers and\nwebhooks using the test Environment (pkg/envtest).  This will automatically\nstand up a copy of etcd and kube-apiserver, and provide the correct options\nto connect to the API server.  It's designed to work well with the Ginkgo\ntesting framework, but should work with any testing setup.\n\nThis example creates a simple application Controller that is configured for ReplicaSets and Pods.\n\n* Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\nReplicaSetReconciler.\n\n* Start the application.\n\n\nThis example creates a simple application Controller that is configured for ExampleCRDWithConfigMapRef CRD.\nAny change in the configMap referenced in this Custom Resource will cause the re-reconcile of the parent ExampleCRDWithConfigMapRef\ndue to the implementation of the .Watches method of \"sigs.k8s.io/controller-runtime/pkg/builder\".Builder.\n\n\nThis example creates a simple application Controller that is configured for ReplicaSets and Pods.\nThis application controller will be running leader election with the provided configuration in the manager options.\nIf leader election configuration is not provided, controller runs leader election with default values.\nDefault values taken from: https://github.com/kubernetes/component-base/blob/master/config/v1alpha1/defaults.go\n* defaultLeaseDuration = 15 * time.Second\n* defaultRenewDeadline = 10 * time.Second\n* defaultRetryPeriod   = 2 * time.Second\n\n* Create a new application for ReplicaSets that manages Pods owned by the ReplicaSet and calls into\nReplicaSetReconciler.\n\n* Start the application.",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/controller-runtime@0.14.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/controller-runtime",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/controller-runtime",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.14.1"
        },
        {
            "SPDXID": "SPDXRef-Package-44da1926ce728e3b",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/json@v0.0.0-20211208200746-9f7c6b3444d2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/json@0.0.0-20211208200746-9f7c6b3444d2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/json",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause",
            "name": "sigs.k8s.io/json",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.0.0-20211208200746-9f7c6b3444d2"
        },
        {
            "SPDXID": "SPDXRef-Package-bd3e70b777e56027",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/json@v0.0.0-20220713155537-f223a00ba0e2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/json@0.0.0-20220713155537-f223a00ba0e2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/json",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause",
            "name": "sigs.k8s.io/json",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "0.0.0-20220713155537-f223a00ba0e2"
        },
        {
            "SPDXID": "SPDXRef-Package-728a8fcfa1b8441b",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/structured-merge-diff/v4@v4.2.1"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/structured-merge-diff/v4@4.2.1",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/structured-merge-diff",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/structured-merge-diff/v4",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "4.2.1"
        },
        {
            "SPDXID": "SPDXRef-Package-758a94d7cbd4f991",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/structured-merge-diff/v4@v4.2.3"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/structured-merge-diff/v4@4.2.3",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/structured-merge-diff",
            "licenseConcluded": "Apache-2.0",
            "licenseDeclared": "Apache-2.0",
            "name": "sigs.k8s.io/structured-merge-diff/v4",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "4.2.3"
        },
        {
            "SPDXID": "SPDXRef-Package-3ddb10e34f70e771",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/yaml@v1.3.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/yaml@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/yaml",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "name": "sigs.k8s.io/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/operator/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-9a39c68d6363985e",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: sigs.k8s.io/yaml@v1.3.0"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/sigs.k8s.io/yaml@1.3.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/kubernetes-sigs/yaml",
            "licenseConcluded": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "licenseDeclared": "Apache-2.0 OR BSD-3-Clause OR MIT",
            "name": "sigs.k8s.io/yaml",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "Organization: Kubernetes SIGs",
            "versionInfo": "1.3.0"
        },
        {
            "SPDXID": "SPDXRef-Package-d425976baa231bf7",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "Python documentation generator",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/sphinx@2.4.4",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://www.sphinx-doc.org/",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "sphinx",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: torch_xla/docs/requirements.txt",
            "supplier": "Organization: Sphinx",
            "versionInfo": "2.4.4"
        },
        {
            "SPDXID": "SPDXRef-Package-42c280d5873fbf1d",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "TensorBoardX lets you watch Tensors Flow without Tensorflow",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/tensorboardx@2.6",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/lanpa/tensorboardX",
            "licenseConcluded": "MIT",
            "licenseDeclared": "MIT",
            "name": "tensorboardX",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/examples/pytorch/llama2/requirements.txt",
            "supplier": "Organization: Tzu-Wei Huang",
            "versionInfo": "2.6"
        },
        {
            "SPDXID": "SPDXRef-Package-2495305d5bb66a8e",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "State-of-the-art Machine Learning for JAX, PyTorch and TensorFlow",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/transformers@4.31.0",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/huggingface/transformers",
            "licenseConcluded": "Apache-1.1",
            "licenseDeclared": "Apache-1.1",
            "name": "transformers",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: atorch/examples/llama2_7b_ATorchTrainer/requirements.txt",
            "supplier": "Organization: Hugging Face",
            "versionInfo": "4.31.0"
        },
        {
            "SPDXID": "SPDXRef-Package-6afcc0357f613918",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: pip"
                }
            ],
            "description": "State-of-the-art Machine Learning for JAX, PyTorch and TensorFlow",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:pypi/transformers@4.37.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://github.com/huggingface/transformers",
            "licenseConcluded": "Apache-1.1",
            "licenseDeclared": "Apache-1.1",
            "name": "transformers",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/examples/pytorch/llama2/requirements.txt",
            "supplier": "Organization: Hugging Face",
            "versionInfo": "4.37.2"
        },
        {
            "SPDXID": "SPDXRef-Package-51418dbbe33999f5",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: xorm.io/builder@v0.3.11-0.20220531020008-1bd24a7dc978"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package builder is a simple and powerful sql builder for Go.\n\nMake sure you have installed Go 1.1+ and then:\n\nWARNNING: Currently, only query conditions are supported. Below is the supported conditions.\n\n1. Eq is a redefine of a map, you can give one or more conditions to Eq\n\n2. Neq is the same to Eq\n\n3. Gt, Gte, Lt, Lte\n\n4. Like\n\n5. Expr you can customerize your sql with Expr\n\n6. In and NotIn\n\n7. IsNull and NotNull\n\n8. And(conds ...Cond), And can connect one or more condtions via AND\n\n9. Or(conds ...Cond), Or can connect one or more conditions via Or\n\n10. Between\n\n11. define yourself conditions\nSince Cond is a interface, you can define yourself conditions and compare with them",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/xorm.io/builder@0.3.11-0.20220531020008-1bd24a7dc978",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gitea.com/xorm/builder",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "xorm.io/builder",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "0.3.11-0.20220531020008-1bd24a7dc978"
        },
        {
            "SPDXID": "SPDXRef-Package-f33396f11802cc4c",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgID: xorm.io/xorm@v1.3.2"
                },
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "PkgType: gomod"
                }
            ],
            "description": "Package xorm is a simple and powerful ORM for Go.\n\nMake sure you have installed Go 1.11+ and then:\n\nFirstly, we should create an engine for a database\n\nMethod NewEngine's parameters are the same as sql.Open which depend drivers' implementation.\nGenerally, one engine for an application is enough. You can define it as a package variable.\n\nXORM supports raw SQL execution:\n\n1. query with a SQL string, the returned results is []map[string][]byte\n\n2. query with a SQL string, the returned results is []map[string]string\n\n3. query with a SQL string, the returned results is []map[string]interface{}\n\n4. execute with a SQL string, the returned results\n\nThere are 8 major ORM methods and many helpful methods to use to operate database.\n\n1. Insert one or multiple records to database\n\n2. Query one record or one variable from database\n\n3. Query multiple records from database\n\n4. Query multiple records and record by record handle, there two methods, one is Iterate,\nanother is Rows\n\nor\n\n5. Update one or more records\n\n6. Delete one or more records, Delete MUST has condition\n\n7. Count records\n\n8. Sum records\n\nThe above 8 methods could use with condition methods chainable.\nNotice: the above 8 methods should be the last chainable method.\n\n1. ID, In\n\n2. Where, And, Or\n\n3. OrderBy, Asc, Desc\n\n4. Limit, Top\n\n5. SQL, let you custom SQL\n\n6. Cols, Omit, Distinct\n\n7. Join, GroupBy, Having\n\nxorm could work with xorm.io/builder directly.\n\n1. With Where\n\n2. With In\n\n3. With Join\n\n4. With SetExprs\n\n5. With SQL\n\n6. With Query\n\n7. With Exec\n\nMore usage, please visit http://xorm.io/docs",
            "downloadLocation": "NOASSERTION",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:golang/xorm.io/xorm@1.3.2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "homepage": "https://gitea.com/xorm/xorm",
            "licenseConcluded": "BSD-3-Clause",
            "licenseDeclared": "BSD-3-Clause",
            "name": "xorm.io/xorm",
            "primaryPackagePurpose": "LIBRARY",
            "sourceInfo": "package found in: dlrover/dlrover/go/brain/go.mod",
            "supplier": "NOASSERTION",
            "versionInfo": "1.3.2"
        },
        {
            "SPDXID": "SPDXRef-Filesystem-f82c37e7fa40fcff",
            "annotations": [
                {
                    "annotationDate": "2025-01-29T17:58:43Z",
                    "annotationType": "OTHER",
                    "annotator": "Tool: Trivy",
                    "comment": "SchemaVersion: 2"
                }
            ],
            "downloadLocation": "NOASSERTION",
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND Apache-2.0 WITH LLVM-exception AND MPL-2.0 AND CDDL-1.0 AND LGPL-2.1-or-later AND LicenseRef-BSD-version-unspecified- AND BSL-1.0 AND BSD-2-Clause AND BSD-3-Clause AND MIT AND LicenseRef-Public-domain-statement",
            "licenseDeclared": "Apache-2.0",
            "name": "lfai-2.intelligent-machine-learning",
            "primaryPackagePurpose": "SOURCE",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "2025-01"
        },
        {
            "SPDXID": "SPDXRef-lfai-2-intelligent-machine-learning-atorch",
            "comment": "This package was added to the Trivy analysis for the atorch by the Scaffold tool SBOM augmentation",
            "downloadLocation": "https://github.com/intelligent-machine-learning/atorch/archive/aeba1f1cbb363268028f309d3c18dec07570d73d.zip",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:github/intelligent-machine-learning/atorch@aeba1f1cbb363268028f309d3c18dec07570d73d",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND Apache-2.0 WITH LLVM-exception AND MPL-2.0 AND CDDL-1.0 AND LGPL-2.1-or-later AND LicenseRef-BSD-version-unspecified- AND BSL-1.0 AND BSD-2-Clause AND BSD-3-Clause AND MIT AND LicenseRef-Public-domain-statement",
            "licenseDeclared": "Apache-2.0",
            "name": "atorch",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project lfai-2",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "aeba1f1cbb363268028f309d3c18dec07570d73d"
        },
        {
            "SPDXID": "SPDXRef-lfai-2-intelligent-machine-learning-dlrover",
            "comment": "This package was added to the Trivy analysis for the dlrover by the Scaffold tool SBOM augmentation",
            "downloadLocation": "https://github.com/intelligent-machine-learning/dlrover/archive/3e010a67438d748cd0ec9fe8bd680897f88a4554.zip",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:github/intelligent-machine-learning/dlrover@3e010a67438d748cd0ec9fe8bd680897f88a4554",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND Apache-2.0 WITH LLVM-exception AND MPL-2.0 AND CDDL-1.0 AND LGPL-2.1-or-later AND LicenseRef-BSD-version-unspecified- AND BSL-1.0 AND BSD-2-Clause AND BSD-3-Clause AND MIT AND LicenseRef-Public-domain-statement",
            "licenseDeclared": "Apache-2.0",
            "name": "dlrover",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project lfai-2",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "3e010a67438d748cd0ec9fe8bd680897f88a4554"
        },
        {
            "SPDXID": "SPDXRef-lfai-2-intelligent-machine-learning-flash-attention",
            "comment": "This package was added to the Trivy analysis for the flash-attention by the Scaffold tool SBOM augmentation",
            "downloadLocation": "https://github.com/intelligent-machine-learning/flash-attention/archive/f692b98d805850983f14deec7a9104583c58b107.zip",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:github/intelligent-machine-learning/flash-attention@f692b98d805850983f14deec7a9104583c58b107",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND Apache-2.0 WITH LLVM-exception AND MPL-2.0 AND CDDL-1.0 AND LGPL-2.1-or-later AND LicenseRef-BSD-version-unspecified- AND BSL-1.0 AND BSD-2-Clause AND BSD-3-Clause AND MIT AND LicenseRef-Public-domain-statement",
            "licenseDeclared": "Apache-2.0",
            "name": "flash-attention",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project lfai-2",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "f692b98d805850983f14deec7a9104583c58b107"
        },
        {
            "SPDXID": "SPDXRef-lfai-2-intelligent-machine-learning-tfplus",
            "comment": "This package was added to the Trivy analysis for the tfplus by the Scaffold tool SBOM augmentation",
            "downloadLocation": "https://github.com/intelligent-machine-learning/tfplus/archive/8bf10bc5fe6d71df412e6eca7caf94f80938ce56.zip",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:github/intelligent-machine-learning/tfplus@8bf10bc5fe6d71df412e6eca7caf94f80938ce56",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND Apache-2.0 WITH LLVM-exception AND MPL-2.0 AND CDDL-1.0 AND LGPL-2.1-or-later AND LicenseRef-BSD-version-unspecified- AND BSL-1.0 AND BSD-2-Clause AND BSD-3-Clause AND MIT AND LicenseRef-Public-domain-statement",
            "licenseDeclared": "Apache-2.0",
            "name": "tfplus",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project lfai-2",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "8bf10bc5fe6d71df412e6eca7caf94f80938ce56"
        },
        {
            "SPDXID": "SPDXRef-lfai-2-intelligent-machine-learning-torch-xla",
            "comment": "This package was added to the Trivy analysis for the torch_xla by the Scaffold tool SBOM augmentation",
            "downloadLocation": "https://github.com/intelligent-machine-learning/torch_xla/archive/08306b7442638b09da719bc4db81a9e1dcb4bffd.zip",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:github/intelligent-machine-learning/torch_xla@08306b7442638b09da719bc4db81a9e1dcb4bffd",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND Apache-2.0 WITH LLVM-exception AND MPL-2.0 AND CDDL-1.0 AND LGPL-2.1-or-later AND LicenseRef-BSD-version-unspecified- AND BSL-1.0 AND BSD-2-Clause AND BSD-3-Clause AND MIT AND LicenseRef-Public-domain-statement",
            "licenseDeclared": "Apache-2.0",
            "name": "torch_xla",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project lfai-2",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "08306b7442638b09da719bc4db81a9e1dcb4bffd"
        },
        {
            "SPDXID": "SPDXRef-lfai-2-intelligent-machine-learning-triton",
            "comment": "This package was added to the Trivy analysis for the triton by the Scaffold tool SBOM augmentation",
            "downloadLocation": "https://github.com/intelligent-machine-learning/triton/archive/5f60092b046d25aa1b124b99e62ebabdadd5a2d2.zip",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:github/intelligent-machine-learning/triton@5f60092b046d25aa1b124b99e62ebabdadd5a2d2",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND Apache-2.0 WITH LLVM-exception AND MPL-2.0 AND CDDL-1.0 AND LGPL-2.1-or-later AND LicenseRef-BSD-version-unspecified- AND BSL-1.0 AND BSD-2-Clause AND BSD-3-Clause AND MIT AND LicenseRef-Public-domain-statement",
            "licenseDeclared": "Apache-2.0",
            "name": "triton",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project lfai-2",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "5f60092b046d25aa1b124b99e62ebabdadd5a2d2"
        },
        {
            "SPDXID": "SPDXRef-lfai-2-intelligent-machine-learning-xla",
            "comment": "This package was added to the Trivy analysis for the xla by the Scaffold tool SBOM augmentation",
            "downloadLocation": "https://github.com/intelligent-machine-learning/xla/archive/43700142202790a7bbf6e3e093fe730fd81c92b5.zip",
            "externalRefs": [
                {
                    "referenceCategory": "PACKAGE_MANAGER",
                    "referenceLocator": "pkg:github/intelligent-machine-learning/xla@43700142202790a7bbf6e3e093fe730fd81c92b5",
                    "referenceType": "purl"
                }
            ],
            "filesAnalyzed": false,
            "licenseConcluded": "Apache-2.0 AND Apache-2.0 WITH LLVM-exception AND MPL-2.0 AND CDDL-1.0 AND LGPL-2.1-or-later AND LicenseRef-BSD-version-unspecified- AND BSL-1.0 AND BSD-2-Clause AND BSD-3-Clause AND MIT AND LicenseRef-Public-domain-statement",
            "licenseDeclared": "Apache-2.0",
            "name": "xla",
            "primaryPackagePurpose": "SOURCE",
            "sourceInfo": "The source this package was part of the LF Scanning configuration for the project lfai-2",
            "supplier": "Organization: Linux Foundation Project lfai-2",
            "versionInfo": "43700142202790a7bbf6e3e093fe730fd81c92b5"
        }
    ],
    "relationships": [
        {
            "spdxElementId": "SPDXRef-Application-1514de6918b2350c",
            "relatedSpdxElement": "SPDXRef-Package-1db4646a3aee0abd",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-1514de6918b2350c",
            "relatedSpdxElement": "SPDXRef-Package-2f3157a1fa4835f7",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-1514de6918b2350c",
            "relatedSpdxElement": "SPDXRef-Package-42c280d5873fbf1d",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-1514de6918b2350c",
            "relatedSpdxElement": "SPDXRef-Package-4c90103c454b24c8",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-1514de6918b2350c",
            "relatedSpdxElement": "SPDXRef-Package-50af95c189644797",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-1514de6918b2350c",
            "relatedSpdxElement": "SPDXRef-Package-6afcc0357f613918",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-1514de6918b2350c",
            "relatedSpdxElement": "SPDXRef-Package-bc059817d8b2b6d1",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-1514de6918b2350c",
            "relatedSpdxElement": "SPDXRef-Package-c465fac0c7908042",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-1514de6918b2350c",
            "relatedSpdxElement": "SPDXRef-Package-e6858187a2164d0c",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-20ff6256dbd86279",
            "relatedSpdxElement": "SPDXRef-Package-12a851b076e9ef96",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-20ff6256dbd86279",
            "relatedSpdxElement": "SPDXRef-Package-6ff74fd208784e61",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-20ff6256dbd86279",
            "relatedSpdxElement": "SPDXRef-Package-e9271abfe50ac876",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-2c801939b14fc0d",
            "relatedSpdxElement": "SPDXRef-Package-19d56d10f89fd26a",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-2c801939b14fc0d",
            "relatedSpdxElement": "SPDXRef-Package-b46f4d4e52ba576e",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-2c801939b14fc0d",
            "relatedSpdxElement": "SPDXRef-Package-d425976baa231bf7",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-9846dcbe6863e946",
            "relatedSpdxElement": "SPDXRef-Package-985430b72f40a928",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-a63064239d6a40fc",
            "relatedSpdxElement": "SPDXRef-Package-e59d68f646b1cb3",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-aa476259e4348c09",
            "relatedSpdxElement": "SPDXRef-Package-9cb39bc3f3664e14",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-ad6c4687af5a348f",
            "relatedSpdxElement": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-c5f4e20d353d551e",
            "relatedSpdxElement": "SPDXRef-Package-2495305d5bb66a8e",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-c5f4e20d353d551e",
            "relatedSpdxElement": "SPDXRef-Package-4cc9fb2c959893ec",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Application-c5f4e20d353d551e",
            "relatedSpdxElement": "SPDXRef-Package-568bdfd438fbf4fa",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-DOCUMENT",
            "relatedSpdxElement": "SPDXRef-Filesystem-f82c37e7fa40fcff",
            "relationshipType": "DESCRIBES"
        },
        {
            "spdxElementId": "SPDXRef-lfai-2-intelligent-machine-learning-dlrover",
            "relatedSpdxElement": "SPDXRef-Application-1514de6918b2350c",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-lfai-2-intelligent-machine-learning-atorch",
            "relatedSpdxElement": "SPDXRef-Application-20ff6256dbd86279",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-lfai-2-intelligent-machine-learning-torch-xla",
            "relatedSpdxElement": "SPDXRef-Application-2c801939b14fc0d",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-lfai-2-intelligent-machine-learning-atorch",
            "relatedSpdxElement": "SPDXRef-Application-9846dcbe6863e946",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-lfai-2-intelligent-machine-learning-dlrover",
            "relatedSpdxElement": "SPDXRef-Application-a63064239d6a40fc",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-lfai-2-intelligent-machine-learning-dlrover",
            "relatedSpdxElement": "SPDXRef-Application-aa476259e4348c09",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-lfai-2-intelligent-machine-learning-dlrover",
            "relatedSpdxElement": "SPDXRef-Application-ad6c4687af5a348f",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-lfai-2-intelligent-machine-learning-atorch",
            "relatedSpdxElement": "SPDXRef-Application-c5f4e20d353d551e",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Package-145dadc61612cbdd",
            "relatedSpdxElement": "SPDXRef-Package-5f0f6596c7b9e7b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-1a30c368c42814de",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-1a88d5da94f707cb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-1afca953cdf6e4fc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-1beaa05e502c6fd3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-1e97863131ca1e98",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-2562d5098660222c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-276654f4d9b3a930",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-27edfb287851190f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-2e67278266d3771",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-300a57510b78e501",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-304f93dad4863af9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-35973b3dbf8ef6f9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-377ffc8c060ea4b2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-37cd3225703c54e5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-3b7fa61d9a5fc9d0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-3eefc34a9bddd9f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-3fc89a3d43189da1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-4221284904d689cf",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-437a2f3d09ae3be8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-46fe5374e5762c69",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-4a0d65e11ef4cff8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-4bde5c5c80488c6d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-51418dbbe33999f5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-55fd18de350c8e7e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-5b8ee6c91c47990e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-60b7ade640147ec0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-6325588cc7bd2380",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-69a56867a428c2b9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-6ea1edd8c5bf32a1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-758a94d7cbd4f991",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-76f8402ff0242170",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-79512ff73d243aa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-7f854d5875d3e651",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-804bb1b6ca9816fa",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-82ced3f757de0f53",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-84b0274ff35dd61c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-88b54e6b76f962e8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-8a1425a82e37ff29",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-96f45b9d0c700448",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-9873bba6491bf4ff",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-9a39c68d6363985e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-a60cf8167c264bd3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-a89835570d4c1563",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-a8f30bef6d93543f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-b158d3c5297812ef",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-b385e36b65d393ed",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-b895af2a2d43a623",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-bcbdb612bada19d1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-bd3e70b777e56027",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-be022993a7e8c989",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-c0b5072be34f4197",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-c53631b77a409a09",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-d2b7a92f980a3e10",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-d7a7b92d7880be1a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-ddf379f0f6204c7d",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-e299b272553bc831",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-e2c73ce6f7a1efe4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-e3ee9833b6dc8859",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-ed014e6558276f31",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-ed0a053162713e1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-f33396f11802cc4c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-f96caabed914b980",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-fc0a1abf5963868e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-230f7f66bfa4f9ba",
            "relatedSpdxElement": "SPDXRef-Package-ffb6d65a57289596",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-300a57510b78e501",
            "relatedSpdxElement": "SPDXRef-Package-5938ccf0fcbcaec5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-300a57510b78e501",
            "relatedSpdxElement": "SPDXRef-Package-75b3b9a9e4cb06fe",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-300a57510b78e501",
            "relatedSpdxElement": "SPDXRef-Package-bcbdb612bada19d1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-300a57510b78e501",
            "relatedSpdxElement": "SPDXRef-Package-cd4b65d77bd9560f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-300a57510b78e501",
            "relatedSpdxElement": "SPDXRef-Package-eebe5f429e33d2e4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-304f93dad4863af9",
            "relatedSpdxElement": "SPDXRef-Package-1762477649efca31",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-428da1a9e3ee02b9",
            "relatedSpdxElement": "SPDXRef-Package-8e740fcd03c13c90",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-910fa41b23e7240f",
            "relatedSpdxElement": "SPDXRef-Package-8e740fcd03c13c90",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-97e03a1e42dcd860",
            "relatedSpdxElement": "SPDXRef-Package-5f0f6596c7b9e7b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-145dadc61612cbdd",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-155005681d12aee9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-1a671efbd66d3c26",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-1bdcca5d9148dd69",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-225706901470de25",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-25b850f26be756a9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-2b15a3c53147ea3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-3fca946bddfe04c3",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-4230218a865e6281",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-44e807166801ce27",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-488667ef2e76e90",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-4ac4bf49fb7dc9a2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-4d7376b28056f2ec",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-52465f37a3f5fd36",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-7012256ece5a4448",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-780429677a2022b4",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-7cd6c18509318ae1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-7ce29b39b1a8bb72",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-7dd08b9836cf1ad2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-8727f22e8f4d9363",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-8aa1aaee576c6390",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-8cb8daebdcc12c34",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-8d986efbd782a2e0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-9784576cb6960c33",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-97e03a1e42dcd860",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-b666ed253b61e748",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-ba10b7855db44520",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-bc063927015470a7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-d307d88010b71cb1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-d3d73170ef8136c0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-e83ee72cd2d75b26",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-ec997d89351f237b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-ee20344d737ffe05",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-9cb39bc3f3664e14",
            "relatedSpdxElement": "SPDXRef-Package-fb14127f10b17ee9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-c09990ec1cdbf18",
            "relatedSpdxElement": "SPDXRef-Package-8e740fcd03c13c90",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e3ee9833b6dc8859",
            "relatedSpdxElement": "SPDXRef-Package-1762477649efca31",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-15017be31cb581f9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-19a59eeee57ef9cc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-221c82b24ea9b0f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-22e760bba6575a52",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-2339f1297d45e24b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-25fc871535a6d1cc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-277a9bcea21ea910",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-28342b3a309be2bc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-285125930bb64bc",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-31abaaa251895cf5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-32c8b4e8b7d311f5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-33e8df43cb4636f7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-34c9c8bbab8a2dc8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-3ddb10e34f70e771",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-40c11085aa370966",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-42727f1b0769c9e2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-428da1a9e3ee02b9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-44da1926ce728e3b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-4882abe722ee437a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-4d126f66e96508cb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-50f833b94d12ce67",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-547905efb058fb36",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-55032bda7bf15b88",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-5552115026755bad",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-55717c713a730bec",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-569f349f4bf1589e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-6046d78b45410e7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-61a632d6da9a8dbb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-65a20f9c07e9c58a",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-685fbf1aa757e983",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-69a6031e8e113c47",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-713f473ecac1dab9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-728a8fcfa1b8441b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-7658c641d0943d39",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-791c2d1e6354cc94",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-7d2fefe2048979ce",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-809b12428ae9fd14",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-80eee8122160acf2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-817747d25e45ebb7",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-89705b61ab92bd90",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-8b81505ecf11b93",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-8d1b68b518369686",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-8e4d51ec2fb77497",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-910fa41b23e7240f",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-911d7ee3fbf31bd2",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-95e47aa2055d1060",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-98cbc458bc77080e",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-9a6daa5a4d1195d8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-9cfb39f601f1a3a1",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-9d3d347523f755bb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-9e3376059eefa416",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-a1265606d8ae2657",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-a2c9764bafb5157b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-a6cee429494a6a5b",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-a9fe9767997b0bf5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-aacbc450f8aea0c9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-b2a5df6a95869ac5",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-b56706566e98c631",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-b7dc4c865043786c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-c09990ec1cdbf18",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-c1df19980382b0f0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-c30d17a3f31c25eb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-c47a10c1766d2b54",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-c9a74345bff12389",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-ccbc5e6fe59f2de9",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-d274aa296a073779",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-d78dd49b561231bb",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-d940da66d84ce708",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-dc35dcecb261950c",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-e0bbd7f562fa4c63",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-e410699fd799f6c8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-e57962629641a8f8",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-ec19cc1062e71ed0",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-ed549384d63a6c10",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-f28e24a18af92b60",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-f408669338c6f271",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Package-e59d68f646b1cb3",
            "relatedSpdxElement": "SPDXRef-Package-f658ef79f42104af",
            "relationshipType": "DEPENDS_ON"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-f82c37e7fa40fcff",
            "relatedSpdxElement": "SPDXRef-lfai-2-intelligent-machine-learning-atorch",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-f82c37e7fa40fcff",
            "relatedSpdxElement": "SPDXRef-lfai-2-intelligent-machine-learning-dlrover",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-f82c37e7fa40fcff",
            "relatedSpdxElement": "SPDXRef-lfai-2-intelligent-machine-learning-flash-attention",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-f82c37e7fa40fcff",
            "relatedSpdxElement": "SPDXRef-lfai-2-intelligent-machine-learning-tfplus",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-f82c37e7fa40fcff",
            "relatedSpdxElement": "SPDXRef-lfai-2-intelligent-machine-learning-torch-xla",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-f82c37e7fa40fcff",
            "relatedSpdxElement": "SPDXRef-lfai-2-intelligent-machine-learning-triton",
            "relationshipType": "CONTAINS"
        },
        {
            "spdxElementId": "SPDXRef-Filesystem-f82c37e7fa40fcff",
            "relatedSpdxElement": "SPDXRef-lfai-2-intelligent-machine-learning-xla",
            "relationshipType": "CONTAINS"
        }
    ]
}